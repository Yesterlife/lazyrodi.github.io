<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Lazy Rodriguez</title>
    <link>http://lazyrodi.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sun, 14 Aug 2016 15:28:29 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>GIT Troubleshooting</title>
      <link>http://lazyrodi.github.io/2016/08/15/2016-08-15-troubleshooting-git/</link>
      <guid>http://lazyrodi.github.io/2016/08/15/2016-08-15-troubleshooting-git/</guid>
      <pubDate>Sun, 14 Aug 2016 15:10:50 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Gerrit-admin을-잃어버렸을-때&quot;&gt;&lt;a href=&quot;#Gerrit-admin을-잃어버렸을-때&quot; class=&quot;headerlink&quot; title=&quot;Gerrit admin을 잃어버렸을 때&quot;&gt;&lt;/a&gt;Gerrit admin을 잃어버렸을 때&lt;/
      
      </description>
      
      <content:encoded>&lt;h2 id=&quot;Gerrit-admin을-잃어버렸을-때&quot;&gt;&lt;a href=&quot;#Gerrit-admin을-잃어버렸을-때&quot; class=&quot;headerlink&quot; title=&quot;Gerrit admin을 잃어버렸을 때&quot;&gt;&lt;/a&gt;Gerrit admin을 잃어버렸을 때&lt;/h2&gt;&lt;p&gt;개인적으로 사용하는 gerrit에서만 사용하고 회사에서는 이런 방법으로 해서는 안될듯. 그런데 다른 방법을 모르겠음…&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;gerrit/etc/gerrit.conf&lt;/code&gt; 파일을 다음과 같이 수정한다. 이 상태일 때는 아무나 로그인하여 권한을 변경할 수 있으니 매우 주의하고 작업시간을 최소화할 것.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[auth]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    type = development_become_any_account&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;이후 gerrit에 로그인하고 계정 정보쪽 (우측 상단)을 누르면 &lt;code&gt;Switch Account&lt;/code&gt;가 보이고, 이를 눌러 admin 계정 (1000000) 으로 로그인이 가능해진다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;그 다음에 Administrator group에 원하는 계정을 추가한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gerrit/etc/gerrit.conf&lt;/code&gt; 파일을 원복시킨다.&lt;/li&gt;
&lt;/ol&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/15/2016-08-15-troubleshooting-git/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Gerrit 사용</title>
      <link>http://lazyrodi.github.io/2016/08/14/2016-08-14-etc-use-gerrit/</link>
      <guid>http://lazyrodi.github.io/2016/08/14/2016-08-14-etc-use-gerrit/</guid>
      <pubDate>Sun, 14 Aug 2016 06:02:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;다른 포스트에서 이어집니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/13/2016-08-13-etc-git-server-installation/&quot; title=&quot;GIT Server Installation&quot;&gt;GIT Server Ins
      
      </description>
      
      <content:encoded>&lt;p&gt;다른 포스트에서 이어집니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/13/2016-08-13-etc-git-server-installation/&quot; title=&quot;GIT Server Installation&quot;&gt;GIT Server Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/13/2016-08-13-etc-use-gitweb/&quot; title=&quot;Gitweb 사용&quot;&gt;Gitweb 사용&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/14/2016-08-14-etc-gerrit-installation/&quot; title=&quot;Gerrit 설치&quot;&gt;Gerrit 설치&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;프로젝트의-추가&quot;&gt;&lt;a href=&quot;#프로젝트의-추가&quot; class=&quot;headerlink&quot; title=&quot;프로젝트의 추가&quot;&gt;&lt;/a&gt;프로젝트의 추가&lt;/h2&gt;&lt;p&gt;프로젝트를 추가하는 방법에는 기본적으로 세 가지가 있다고 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://gerrit-documentation.storage.googleapis.com/Documentation/2.12.3/project-configuration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gerrit-documentation.storage.googleapis.com/Documentation/2.12.3/project-configuration.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Gerrit web page 상에서 &lt;code&gt;Projects &amp;gt; Create Project&lt;/code&gt;를 통해 생성하는 방법&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;REST endpoint를 통해 생성하는 방법&lt;/li&gt;
&lt;li&gt;SSH 명령어를 통해 생성하는 방법&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;나는 web page를 통해 생성을 시도해본다.&lt;/p&gt;
&lt;h3 id=&quot;Gerrit-Web-page를-통해-프로젝트-생성&quot;&gt;&lt;a href=&quot;#Gerrit-Web-page를-통해-프로젝트-생성&quot; class=&quot;headerlink&quot; title=&quot;Gerrit Web page를 통해 프로젝트 생성&quot;&gt;&lt;/a&gt;Gerrit Web page를 통해 프로젝트 생성&lt;/h3&gt;&lt;p&gt;Projects &amp;gt; Create New Project 로 가서 Project Name에 &lt;code&gt;temp&lt;/code&gt;를 입력하고 생성해본다.&lt;/p&gt;
&lt;p&gt;이러면 원래 지정해두었던 &lt;code&gt;~/repository&lt;/code&gt; 디렉토리 안에 새로운 &lt;code&gt;temp.git&lt;/code&gt; 이라는 저장소가 생성된다.&lt;/p&gt;
&lt;h2 id=&quot;사용자-추가-Server-side&quot;&gt;&lt;a href=&quot;#사용자-추가-Server-side&quot; class=&quot;headerlink&quot; title=&quot;사용자 추가 (Server side)&quot;&gt;&lt;/a&gt;사용자 추가 (Server side)&lt;/h2&gt;&lt;p&gt;사용자의 추가는 &lt;code&gt;gerrit&lt;/code&gt; 사용자 계정에서 아래 명령을 통해 추가한다. 이전에 admin을 추가했었다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ htpasswd ~/opt/gerrit/etc/passwords user&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;해당 사용자로 처음 로그인을 시도하면 이름, 이메일 및 SSH public key를 넣으라고 나온다.&lt;/p&gt;
&lt;p&gt;이름과 이메일을 넣고, SSH public key는 다음과 같이 생성하여 넣으면 된다.&lt;/p&gt;
&lt;p&gt;만약, 이전에 smtp 설정을 하지 않았다면 새 사용자의 email 인증은 진행할 수 없다.&lt;/p&gt;
&lt;h3 id=&quot;SSH-public-key-생성-Client-side&quot;&gt;&lt;a href=&quot;#SSH-public-key-생성-Client-side&quot; class=&quot;headerlink&quot; title=&quot;SSH public key 생성 (Client side)&quot;&gt;&lt;/a&gt;SSH public key 생성 (Client side)&lt;/h3&gt;&lt;p&gt;아래와 같이 생성된 key의 내용을 복사하여 gerrit에 넣고 Add를 눌러 추가한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ mkdir .ssh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; .ssh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ ssh-keygen       &lt;span class=&quot;comment&quot;&gt;# 전부 그냥 엔터&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ cat id_rsa.pub   &lt;span class=&quot;comment&quot;&gt;# 여기 나오는 내용이 SSH public key이다.&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Project-clone-Client-side&quot;&gt;&lt;a href=&quot;#Project-clone-Client-side&quot; class=&quot;headerlink&quot; title=&quot;Project clone (Client side)&quot;&gt;&lt;/a&gt;Project clone (Client side)&lt;/h2&gt;&lt;p&gt;새로 추가한 &lt;code&gt;user&lt;/code&gt; 계정에서 gerrit 접속 후 &lt;code&gt;projects &amp;gt; List &amp;gt; temp&lt;/code&gt;로 가면 현재 프로젝트를 clone할 수 있는 주소를 알 수 있다.&lt;/p&gt;
&lt;p&gt;http와 ssh로 나뉘어 제공되며, 나는 ssh로 clone 해본다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; ssh://user@192.168.0.99:29418/temp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;push-1차-실패&quot;&gt;&lt;a href=&quot;#push-1차-실패&quot; class=&quot;headerlink&quot; title=&quot;push 1차 실패&quot;&gt;&lt;/a&gt;push 1차 실패&lt;/h3&gt;&lt;p&gt;파일 생성 후 push를 시도해본다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ touch b&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git add -A&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git commit -m &lt;span class=&quot;string&quot;&gt;&quot;[temp] touch b&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git push&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Counting objects: 4, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Delta compression using up to 2 threads.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Compressing objects: 100% (2/2), done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Writing objects: 100% (2/2), 231 bytes | 0 bytes/s, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Total 2 (delta 0), reused 0 (delta 0)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: Branch refs/heads/master:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: You are not allowed to perform this operation.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: To push into this reference you need &lt;span class=&quot;string&quot;&gt;&#39;Push&#39;&lt;/span&gt; rights.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: User: user&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: Please &lt;span class=&quot;built_in&quot;&gt;read&lt;/span&gt; the documentation and contact an administrator&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; you feel the configuration is incorrect&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: Processing changes: refs: 1, &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;To ssh://user@192.168.0.99:29418/temp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; ! [remote rejected] master -&amp;gt; master (prohibited by Gerrit)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;error: 레퍼런스를 &lt;span class=&quot;string&quot;&gt;&#39;ssh://user@192.168.0.99:29418/temp&#39;&lt;/span&gt;에 푸시하는데 실패했습니다&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;직접 push할 수 있는 권한이 없다.&lt;/p&gt;
&lt;p&gt;검색을 해보면 이전에는 git review라는 명령어가 있었던 것 같은데 지금은 존재하지 않는다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ git remote -v&lt;/code&gt; 해서 temp 저장소에 대한 정보를 보면 master의 merge가 refs/heads/master로 되어있는 것을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gerrit-documentation.storage.googleapis.com/Documentation/2.12.3/intro-user.html#upload-change&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;하지만 gerrit을 통해 code review를 받기 위해서는  refs/for/master 로 push를 해야한다고 한다.&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The refs/for/ prefix is used to map the Gerrit concept of “Pushing for Review” to the git protocol. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;시키는대로 한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git push origin HEAD:refs/&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;/refs/heads/master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;push-2차-실패&quot;&gt;&lt;a href=&quot;#push-2차-실패&quot; class=&quot;headerlink&quot; title=&quot;push 2차 실패&quot;&gt;&lt;/a&gt;push 2차 실패&lt;/h3&gt;&lt;p&gt;또 실패했다. 다행인 것은 에러가 다르다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Counting objects: 4, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Delta compression using up to 2 threads.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Compressing objects: 100% (2/2), done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Writing objects: 100% (2/2), 231 bytes | 0 bytes/s, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Total 2 (delta 0), reused 0 (delta 0)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: Processing changes: refs: 1, &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: ERROR: missing Change-Id &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; commit message footer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: Hint: To automatically insert Change-Id, install the hook:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:   gitdir=$(git rev-parse --git-dir); scp -p -P 29418 user@192.168.0.99:hooks/commit-msg &lt;span class=&quot;variable&quot;&gt;$&amp;#123;gitdir&amp;#125;&lt;/span&gt;/hooks/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: And &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; amend the commit:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:   git commit --amend&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;To ssh://user@192.168.0.99:29418/temp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; ! [remote rejected] HEAD -&amp;gt; refs/&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;/refs/heads/master (missing Change-Id &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; commit message footer)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;error: 레퍼런스를 &lt;span class=&quot;string&quot;&gt;&#39;ssh://user@192.168.0.99:29418/temp&#39;&lt;/span&gt;에 푸시하는데 실패했습니다&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Change-Id가 없단다. 추적을 위해 반드시 필요한 부분이니 또 시키는대로 해본다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ scp -p -P 29418 user@192.168.0.99:hooks/commit-msg .git/hooks/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git commit --amend &lt;span class=&quot;comment&quot;&gt;#그냥 저장만 하고 나오자.&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;git log&lt;/code&gt;를 쳐보면 Change-Id가 생성된 것을 확인할 수 있다. 기쁜 마음으로 &lt;code&gt;git push origin HEAD:refs/for/refs/heads/master&lt;/code&gt; 해보자.&lt;/p&gt;
&lt;p&gt;드디어 성공했다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Counting objects: 4, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Delta compression using up to 2 threads.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Compressing objects: 100% (2/2), done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Writing objects: 100% (2/2), 278 bytes | 0 bytes/s, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Total 2 (delta 0), reused 0 (delta 0)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: Processing changes: new: 1, refs: 1, &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: New Changes:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:   http://192.168.0.99:80/1 [temp] touch b&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;To ssh://user@192.168.0.99:29418/temp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * [new branch]      HEAD -&amp;gt; refs/&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;/refs/heads/master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Gerrit에서-확인하기&quot;&gt;&lt;a href=&quot;#Gerrit에서-확인하기&quot; class=&quot;headerlink&quot; title=&quot;Gerrit에서 확인하기&quot;&gt;&lt;/a&gt;Gerrit에서 확인하기&lt;/h2&gt;&lt;p&gt;브라우저로 가서 gerrit에 들어가본다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;My &amp;gt; Changes&lt;/code&gt; 로 가면 방금 push한 commit을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;administrator 또는 reviewer group에 속한 사람의 계정으로 접속하면 코드를 확인 및 점수를 줄 수 있고 commit을 submit (merge)할 수 있다.&lt;/p&gt;
&lt;p&gt;자신의 commit에 변경사항이 발생하면 email로도 알려준다. 좋은 세상이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016-08-15-etc-use-gerrit-001.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mytory.net/archives/12632&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mytory.net/archives/12632&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/14/2016-08-14-etc-use-gerrit/#disqus_thread</comments>
    </item>
    
    <item>
      <title>MySQL Troubleshooting</title>
      <link>http://lazyrodi.github.io/2016/08/14/2016-08-14-troubleshooting-mysql/</link>
      <guid>http://lazyrodi.github.io/2016/08/14/2016-08-14-troubleshooting-mysql/</guid>
      <pubDate>Sun, 14 Aug 2016 01:10:50 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;ERROR-1045-28000-Access-Denied-for-user-‘root’-’localhost’-using-password-NO&quot;&gt;&lt;a href=&quot;#ERROR-1045-28000-Access-Denied-for-user-‘roo
      
      </description>
      
      <content:encoded>&lt;h3 id=&quot;ERROR-1045-28000-Access-Denied-for-user-‘root’-’localhost’-using-password-NO&quot;&gt;&lt;a href=&quot;#ERROR-1045-28000-Access-Denied-for-user-‘root’-’localhost’-using-password-NO&quot; class=&quot;headerlink&quot; title=&quot;ERROR 1045 (28000): Access Denied for user ‘root’@’localhost’ (using password: NO)&quot;&gt;&lt;/a&gt;ERROR 1045 (28000): Access Denied for user ‘root’@’localhost’ (using password: NO)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sudo mysql -p&lt;/code&gt; 명령으로 비밀번호를 따로 입력하면 OK.&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/14/2016-08-14-troubleshooting-mysql/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Gerrit 설치</title>
      <link>http://lazyrodi.github.io/2016/08/14/2016-08-14-etc-gerrit-installation/</link>
      <guid>http://lazyrodi.github.io/2016/08/14/2016-08-14-etc-gerrit-installation/</guid>
      <pubDate>Sun, 14 Aug 2016 01:02:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;다른 포스트에서 이어집니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/13/2016-08-13-etc-git-server-installation/&quot; title=&quot;GIT Server Installation&quot;&gt;GIT Server Ins
      
      </description>
      
      <content:encoded>&lt;p&gt;다른 포스트에서 이어집니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/13/2016-08-13-etc-git-server-installation/&quot; title=&quot;GIT Server Installation&quot;&gt;GIT Server Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/13/2016-08-13-etc-use-gitweb/&quot; title=&quot;Gitweb 사용&quot;&gt;Gitweb 사용&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이전 포스트에서 삽질했던 GIT 저장소에 대한 내용을 gerrit에서 직접적으로 사용하진 않습니다.&lt;/p&gt;
&lt;h1 id=&quot;설치&quot;&gt;&lt;a href=&quot;#설치&quot; class=&quot;headerlink&quot; title=&quot;설치&quot;&gt;&lt;/a&gt;설치&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;설치 가이드: &lt;a href=&quot;https://gerrit-documentation.storage.googleapis.com/Documentation/2.12.3/install.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gerrit-documentation.storage.googleapis.com/Documentation/2.12.3/install.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;유틸-설치&quot;&gt;&lt;a href=&quot;#유틸-설치&quot; class=&quot;headerlink&quot; title=&quot;유틸 설치&quot;&gt;&lt;/a&gt;유틸 설치&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;JDK7 이상&lt;/li&gt;
&lt;li&gt;Apache2&lt;/li&gt;
&lt;li&gt;Database&lt;ul&gt;
&lt;li&gt;&lt;code&gt;H2&lt;/code&gt;, &lt;code&gt;Apache Derby&lt;/code&gt;, &lt;code&gt;PostgreSQL&lt;/code&gt;, &lt;code&gt;MySQL&lt;/code&gt;, &lt;code&gt;Oracle&lt;/code&gt;, &lt;code&gt;SAP MaxDB&lt;/code&gt;, &lt;code&gt;DB2&lt;/code&gt; 중 하나를 사용하면 된다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;H2&lt;/code&gt;를 사용하면 gerrit의 기본 database라서 따로 설정할 것이 없다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install oracle-java7-installer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install apache2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install libapache2-mod-proxy-html&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install apache2-utils&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo a2enmod proxy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo a2enmod proxy_http&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo service apache2 restart&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;gerrit-설치&quot;&gt;&lt;a href=&quot;#gerrit-설치&quot; class=&quot;headerlink&quot; title=&quot;gerrit 설치&quot;&gt;&lt;/a&gt;gerrit 설치&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gerrit-releases.storage.googleapis.com/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gerrit-releases.storage.googleapis.com/index.html&lt;/a&gt; 의 Release Notes를 통해 war 경로를 확인할 수 있다. 16년 8월 현재 최신버전은 2.12.3.&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gerrit-releases.storage.googleapis.com/gerrit-2.12.3.war&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gerrit-releases.storage.googleapis.com/gerrit-2.12.3.war&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;우선, gerrit을 위해 ‘gerrit’ 이라는 user를 하나 생성하였다.&lt;/p&gt;
&lt;p&gt;설치 파일을 아래의 &lt;code&gt;wget&lt;/code&gt; 명령어로 download받을 수 있으며, &lt;code&gt;~/Downloads&lt;/code&gt; 디렉토리를 생성하여 그곳에 받았다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ wget https://gerrit-releases.storage.googleapis.com/gerrit-2.12.3.war&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;설치한다. &lt;code&gt;init -d&lt;/code&gt; 이후의 경로는 설치하고 싶은 경로를 지정한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ java -jar gerrit-2.12.3.war init &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; ~/opt/gerrit&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;나의 경우 설치 과정은 다음과 같다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;gerrit@computer:~/Downloads$ java -jar gerrit-2.12.3.war init &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; ~/opt/gerrit&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Using secure store: com.google.gerrit.server.securestore.DefaultSecureStore&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[2016-08-14 17:19:33,592] [main] INFO  com.google.gerrit.server.config.GerritServerConfigProvider : No /home/gerrit/opt/gerrit/etc/gerrit.config; assuming defaults&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Gerrit Code Review 2.12.3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Create &lt;span class=&quot;string&quot;&gt;&#39;/home/gerrit/opt/gerrit&#39;&lt;/span&gt; [Y/n]? Y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Git Repositories&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Location of Git repositories   [git]: /home/gerrit/repository/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** SQL Database&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Database server &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;           [h2]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Index&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Type                           [LUCENE/?]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;The index must be rebuilt before starting Gerrit:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  java -jar gerrit.war reindex &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; site_path&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** User Authentication&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Authentication method          [OPENID/?]: http&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Get username from custom HTTP header [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Username HTTP header           [SM_USER]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SSO &lt;span class=&quot;built_in&quot;&gt;logout&lt;/span&gt; URL                 : http://aa:aa@192.168.0.99:80/login/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Enable signed push support     [y/N]?&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Review Labels&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Install Verified label         [y/N]?&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Email Delivery&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SMTP server hostname           [localhost]: smtp.gmail.com&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SMTP server port               [(default)]: 465&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SMTP encryption                [NONE/?]: SSL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SMTP username                  [gerrit]: 계정@gmail.com&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;계정@gmail.com&lt;span class=&quot;string&quot;&gt;&#39;s password  :&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              confirm password :&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Container Process&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Run as                         [gerrit]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Java runtime                   [/usr/lib/jvm/java-7-oracle/jre]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Copy gerrit-2.12.3.war to /home/gerrit/opt/gerrit/bin/gerrit.war [Y/n]? Y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Copying gerrit-2.12.3.war to /home/gerrit/opt/gerrit/bin/gerrit.war&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** SSH Daemon&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Listen on address              [*]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Listen on port                 [29418]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Gerrit Code Review is not shipped with Bouncy Castle Crypto SSL v152&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  If available, Gerrit can take advantage of features&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  in the library, but will also function without it.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Download and install it now [Y/n]?&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Downloading http://repo2.maven.org/maven2/org/bouncycastle/bcpkix-jdk15on/1.52/bcpkix-jdk15on-1.52.jar ... OK&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Checksum bcpkix-jdk15on-1.52.jar OK&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Gerrit Code Review is not shipped with Bouncy Castle Crypto Provider v152&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** This library is required by Bouncy Castle Crypto SSL v152. **&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Download and install it now [Y/n]?&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Downloading http://repo2.maven.org/maven2/org/bouncycastle/bcprov-jdk15on/1.52/bcprov-jdk15on-1.52.jar ... OK&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Checksum bcprov-jdk15on-1.52.jar OK&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Generating SSH host key ... rsa... dsa... done&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** HTTP Daemon&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Behind reverse proxy           [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Proxy uses SSL (https://)      [y/N]?&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Subdirectory on proxy server   [/]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Listen on address              [*]: 192.168.0.99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Listen on port                 [8081]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Canonical URL                  [http://127.0.0.1/]: http://192.168.0.99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Plugins&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Installing plugins.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Install plugin commit-message-length-validator version v2.12.3 [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Install plugin download-commands version v2.12.3 [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Install plugin replication version v2.12.3 [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Install plugin reviewnotes version v2.12.3 [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Install plugin singleusergroup version v2.12.3 [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Initializing plugins.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;No plugins found with init steps.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Initialized /home/gerrit/opt/gerrit&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;위의 설정사항은 &lt;code&gt;설치디렉토리/etc/gerrit.config&lt;/code&gt; 에 저장된다.&lt;/p&gt;
&lt;h3 id=&quot;Index-rebuilt&quot;&gt;&lt;a href=&quot;#Index-rebuilt&quot; class=&quot;headerlink&quot; title=&quot;Index rebuilt&quot;&gt;&lt;/a&gt;Index rebuilt&lt;/h3&gt;&lt;p&gt;잘은 모르겠지만 검색 엔진에 대한 색인 과정인 것 같다. 이 명령어를 수행해줘야 하는 것 같다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ java -jar gerrit-2.12.3.war reindex &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; ~/opt/gerrit&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Gerrit-실행&quot;&gt;&lt;a href=&quot;#Gerrit-실행&quot; class=&quot;headerlink&quot; title=&quot;Gerrit 실행&quot;&gt;&lt;/a&gt;Gerrit 실행&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/opt/gerrit/bin&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ ./gerrit.sh start&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;실행은 됐는데 브라우저로 확인할 수가 없다.&lt;/p&gt;
&lt;p&gt;apache 설정을 할 차례가 됐다.&lt;/p&gt;
&lt;h2 id=&quot;apache-proxy-설정&quot;&gt;&lt;a href=&quot;#apache-proxy-설정&quot; class=&quot;headerlink&quot; title=&quot;apache proxy 설정&quot;&gt;&lt;/a&gt;apache proxy 설정&lt;/h2&gt;&lt;h3 id=&quot;VirtualHost-파일-생성&quot;&gt;&lt;a href=&quot;#VirtualHost-파일-생성&quot; class=&quot;headerlink&quot; title=&quot;VirtualHost 파일 생성&quot;&gt;&lt;/a&gt;VirtualHost 파일 생성&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo vim /etc/apache2/sites-available/gerrit.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;VirtualHost *:80&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ServerName localhost&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ProxyRequests Off&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ProxyVia Off&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ProxyPreserveHost On&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;Proxy *&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Order deny,allow&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Allow from all&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/Proxy&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;Location /login/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        AuthType Basic&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        AuthName &lt;span class=&quot;string&quot;&gt;&quot;Gerrit Code Review&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Require valid-user&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        AuthUserFile /home/gerrit/opt/gerrit/etc/passwords&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/Location&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ProxyPass / http://192.168.0.99:8081/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ProxyPassReverese / http://192.168.0.99:8081/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Site-enabled-설정&quot;&gt;&lt;a href=&quot;#Site-enabled-설정&quot; class=&quot;headerlink&quot; title=&quot;Site-enabled 설정&quot;&gt;&lt;/a&gt;Site-enabled 설정&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /etc/apache2/sites-enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo ln &lt;span class=&quot;_&quot;&gt;-s&lt;/span&gt; ../sites-available/gerrit.conf ./001-gerrit.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo a2ensite 001-gerrit.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;기본-설정파일의-포트를-변경&quot;&gt;&lt;a href=&quot;#기본-설정파일의-포트를-변경&quot; class=&quot;headerlink&quot; title=&quot;기본 설정파일의 포트를 변경&quot;&gt;&lt;/a&gt;기본 설정파일의 포트를 변경&lt;/h3&gt;&lt;p&gt;포트 충돌로 인해 gerrit이 로딩이 안될 수 있으므로, &lt;code&gt;sudo vim /etc/apache2/sites-available/000-default.conf&lt;/code&gt; 파일의 포트를 80에서 10080 등으로 변경한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;VirtualHost *:10080&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Gerrit-사용자-등록&quot;&gt;&lt;a href=&quot;#Gerrit-사용자-등록&quot; class=&quot;headerlink&quot; title=&quot;Gerrit 사용자 등록&quot;&gt;&lt;/a&gt;Gerrit 사용자 등록&lt;/h3&gt;&lt;p&gt;관리자 계정을 생성한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;htpasswd&lt;/code&gt;로 생성하는 계정은 apache에서 인증을 위해 사용하는 계정이며, gerrit은 처음 생성된 계정(uid 1000000)을 administrator로 인식한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ htpasswd -c /home/gerrit/opt/gerrit/etc/passwords &lt;span class=&quot;string&quot;&gt;&quot;admin&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;passwords파일을 처음 생성할 때에만 -c 옵션을 사용하며 이후 다른 계정을 추가할 때에는 그냥 아래와 같이 추가한다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ htpasswd /home/gerrit/opt/gerrit/etc/passwords &lt;span class=&quot;string&quot;&gt;&quot;usera&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Apache-재시작-및-gerrit-재시작&quot;&gt;&lt;a href=&quot;#Apache-재시작-및-gerrit-재시작&quot; class=&quot;headerlink&quot; title=&quot;Apache 재시작 및 gerrit 재시작&quot;&gt;&lt;/a&gt;Apache 재시작 및 gerrit 재시작&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo service apache2 restart&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/opt/gerrit/bin&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ ./gerrit.sh restart&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;이후 접속을 시도하면, 사용자 이름 및 비밀번호를 묻는다.&lt;/p&gt;
&lt;p&gt;위에서 설정한 admin / password 를 넣는다.&lt;/p&gt;
&lt;p&gt;로그인 된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016-08-14-etc-gerrit-installation-001.jpg&quot; alt=&quot;Login 성공&quot;&gt;&lt;/p&gt;
&lt;p&gt;그런데 브라우저에따라 sign out이 안 되는 문제가 있다.&lt;/p&gt;
&lt;p&gt;이 문제의 해결을 위해서는 설치 시 logout URL을 &lt;code&gt;http://aa:aa@192.168.0.99:80/login/&lt;/code&gt; 처럼 넣어주면 된다. aa:aa 는 문자 그대로 aa:aa 그대로 넣어주면 된다.&lt;/p&gt;
&lt;p&gt;이게 조금 이상한 버그인게… 사람마다 아래 중 하나로 해야 해결되는 케이스가 있다고 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://aa:aa@192.168.0.99&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://aa:aa@192.168.0.99&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://aa:aa@192.168.0.99:80&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://aa:aa@192.168.0.99:80&lt;/a&gt;         # 포트까지&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://aa:aa@192.168.0.99:80/login/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://aa:aa@192.168.0.99:80/login/&lt;/a&gt;  # 뒤의 경로까지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;logout URL을 처음에 설정을 못 하였다면 &lt;code&gt;/etc/gerrit.config&lt;/code&gt; 파일을 열고 &lt;code&gt;[auth]&lt;/code&gt; 아래에 다음과 같이 추가하면 된다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[auth]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SSO &lt;span class=&quot;built_in&quot;&gt;logout&lt;/span&gt; URL                 : http://aa:aa@192.168.0.99:80/login/&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;sign out이 안되는 문제의 기본적인 원인은 HTTP의 특성 (&lt;a href=&quot;https://groups.google.com/forum/?fromgroups=#!topic/repo-discuss/7P73ZvK4OQQ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://groups.google.com/forum/?fromgroups=#!topic/repo-discuss/7P73ZvK4OQQ&lt;/a&gt; 참조)이라고 한다. auth type을 다른 것들(oAuth, OpenID, etc.)로 지정하면 이런 문제는 발생하지 않는 듯 하다.&lt;/p&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gerritcodereview.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.gerritcodereview.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pseg.or.kr/pseg/infoinstall/1780&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pseg.or.kr/pseg/infoinstall/1780&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ahnseungkyu.com/194&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ahnseungkyu.com/194&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/14/2016-08-14-etc-gerrit-installation/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Gitweb 사용</title>
      <link>http://lazyrodi.github.io/2016/08/13/2016-08-13-etc-use-gitweb/</link>
      <guid>http://lazyrodi.github.io/2016/08/13/2016-08-13-etc-use-gitweb/</guid>
      <pubDate>Sat, 13 Aug 2016 14:02:50 GMT</pubDate>
      <description>
      
        &lt;a href=&quot;/2016/08/13/2016-08-13-etc-git-server-installation/&quot; title=&quot;GIT Server Installation&quot;&gt;GIT Server Installation&lt;/a&gt;에서 설치한 내용을 GitWeb 을
      
      </description>
      
      <content:encoded>&lt;a href=&quot;/2016/08/13/2016-08-13-etc-git-server-installation/&quot; title=&quot;GIT Server Installation&quot;&gt;GIT Server Installation&lt;/a&gt;에서 설치한 내용을 GitWeb 을 통해 보는 방법이다.&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;GitWeb은 말 그대로 GIT의 변경사항을 Web에서 편하게 볼 수 있게 도와주는 툴이다. 예시로는 &lt;a href=&quot;https://android.googlesource.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://android.googlesource.com/&lt;/a&gt; 를 보는 것이 적절할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;GIT에서 기본적으로 지원해주는 내용이라 한 번에 써둘까 했는데, 그냥 포스트를 하나 더 작성하였다.&lt;/p&gt;
&lt;p&gt;아래 명령을 수행하면 GitWeb이 실행되어 브라우저에서 확인할 수 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo git instaweb&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Gitweb은 &lt;code&gt;lighttpd&lt;/code&gt;에 의존성이 있어서 내 PC에서는 에러가 발생하였다.&lt;/p&gt;
&lt;p&gt;설치한다. 리눅스 버전에 따라 기본적으로 설치되어 있는 것도 있다고 한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install lighttpd&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;이후 다시 &lt;code&gt;sudo git instaweb&lt;/code&gt;을 수행한 후 브라우저에서 &lt;code&gt;127.0.0.1:1234&lt;/code&gt; 를 입력하면 Gitweb을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;GitWeb의 &lt;code&gt;Description&lt;/code&gt; 설정은 GIT 저장소의 &lt;code&gt;description&lt;/code&gt;파일을 수정하면 바뀐다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016-08-13-etc-use-gitweb-001.jpg&quot; alt=&quot;Project-A의 GitWeb&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/ko/v2/Git-%EC%84%9C%EB%B2%84-GitWeb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://git-scm.com/book/ko/v2/Git-%EC%84%9C%EB%B2%84-GitWeb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/13/2016-08-13-etc-use-gitweb/#disqus_thread</comments>
    </item>
    
    <item>
      <title>GIT server installation</title>
      <link>http://lazyrodi.github.io/2016/08/13/2016-08-13-etc-git-server-installation/</link>
      <guid>http://lazyrodi.github.io/2016/08/13/2016-08-13-etc-git-server-installation/</guid>
      <pubDate>Sat, 13 Aug 2016 03:02:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;Ubuntu에서 GIT server를 구축해 보았다.&lt;/p&gt;
&lt;h1 id=&quot;Server-side&quot;&gt;&lt;a href=&quot;#Server-side&quot; class=&quot;headerlink&quot; title=&quot;Server side&quot;&gt;&lt;/a&gt;Server side&lt;/h1&gt;
      
      </description>
      
      <content:encoded>&lt;p&gt;Ubuntu에서 GIT server를 구축해 보았다.&lt;/p&gt;
&lt;h1 id=&quot;Server-side&quot;&gt;&lt;a href=&quot;#Server-side&quot; class=&quot;headerlink&quot; title=&quot;Server side&quot;&gt;&lt;/a&gt;Server side&lt;/h1&gt;&lt;h2 id=&quot;새-Project를-위한-계정-생성&quot;&gt;&lt;a href=&quot;#새-Project를-위한-계정-생성&quot; class=&quot;headerlink&quot; title=&quot;새 Project를 위한 계정 생성&quot;&gt;&lt;/a&gt;새 Project를 위한 계정 생성&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo adduser project&lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;git-설치&quot;&gt;&lt;a href=&quot;#git-설치&quot; class=&quot;headerlink&quot; title=&quot;git 설치&quot;&gt;&lt;/a&gt;git 설치&lt;/h2&gt;&lt;p&gt;위에서 생성한 &lt;code&gt;project-a&lt;/code&gt; 계정으로 로그인한 후,&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;git-저장소-생성&quot;&gt;&lt;a href=&quot;#git-저장소-생성&quot; class=&quot;headerlink&quot; title=&quot;.git 저장소 생성&quot;&gt;&lt;/a&gt;.git 저장소 생성&lt;/h2&gt;&lt;p&gt;임의의 디렉토리 &lt;code&gt;~/project-a.git&lt;/code&gt;를 생성한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ mkdir project-a.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; project-a.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git init --bare --shared&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;--bare&lt;/code&gt;: 빈 저장소(bare repository)를 생성한다. config 파일의 &lt;code&gt;bare&lt;/code&gt; 속성이 &lt;code&gt;true&lt;/code&gt;로 변경된다. bare 설정이 되어있어야 제대로 사용이 가능하다. &lt;code&gt;GIT_DIR&lt;/code&gt; 환경설정이 따로 되어있는 경우가 아니라면 현재의 디렉토리를 빈 저장소로 설정한다.&lt;br&gt;&lt;code&gt;--shared&lt;/code&gt;: GIT 저장소의 push 권한을 설정한다. 이 옵션을 사용할 경우 &lt;code&gt;core.sharedRepository&lt;/code&gt; 속성이 &lt;code&gt;1&lt;/code&gt;로 설정된다. 이 옵션의 하위 속성으로는 &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;umask&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;world&lt;/code&gt;, &lt;code&gt;everybody&lt;/code&gt;, &lt;code&gt;0xxx&lt;/code&gt;가 있다.&lt;/p&gt;
&lt;p&gt;놀랍게도(?) GIT server의 생성이 끝났다.&lt;/p&gt;
&lt;h1 id=&quot;Client-side&quot;&gt;&lt;a href=&quot;#Client-side&quot; class=&quot;headerlink&quot; title=&quot;Client side&quot;&gt;&lt;/a&gt;Client side&lt;/h1&gt;&lt;h2 id=&quot;서버로부터-git-clone하기&quot;&gt;&lt;a href=&quot;#서버로부터-git-clone하기&quot; class=&quot;headerlink&quot; title=&quot;서버로부터 git clone하기&quot;&gt;&lt;/a&gt;서버로부터 git clone하기&lt;/h2&gt;&lt;p&gt;위에서 생성한 저장소를 사용할 user의 아이디가 &lt;code&gt;User2&lt;/code&gt; 라고 하자.&lt;/p&gt;
&lt;p&gt;여기서는 같은 서버에 붙어있는 사용자이므로 주소를 &lt;code&gt;127.0.0.1&lt;/code&gt; 로 사용한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; User2@127.0.0.1:/home/project&lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;/project-a.git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;환경설정&quot;&gt;&lt;a href=&quot;#환경설정&quot; class=&quot;headerlink&quot; title=&quot;환경설정&quot;&gt;&lt;/a&gt;환경설정&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;User2@gmail.com&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;User2&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git config push.default simple&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;push.default&lt;/code&gt;: &lt;code&gt;simple&lt;/code&gt;과 &lt;code&gt;matching&lt;/code&gt; 두 가지 값을 사용할 수 있으며, 각각의 의미는 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;simple&lt;/code&gt;: 현재 작업 중인 branch에만 push&lt;/li&gt;
&lt;li&gt;&lt;code&gt;matching&lt;/code&gt;: 모든 branch에 대해 push&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;설정값들은 &lt;code&gt;git config --global --list&lt;/code&gt;를 통해 확인할 수 있으며, 기본 설정을 건드리지 않았다면 &lt;code&gt;/home/계정/.gitconfig&lt;/code&gt;에 내용이 저장되어 있다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;push.default&lt;/code&gt;를 설정하지 않아도 크게 상관은 없지만, &lt;code&gt;git push&lt;/code&gt; 시 다음과 같은 경고가 발생하기 때문에 미리 설정하는 것이 좋다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;warning: push.default is &lt;span class=&quot;built_in&quot;&gt;unset&lt;/span&gt;; its implicit value is changing &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Git 2.0 from &lt;span class=&quot;string&quot;&gt;&#39;matching&#39;&lt;/span&gt; to &lt;span class=&quot;string&quot;&gt;&#39;simple&#39;&lt;/span&gt;. To squelch this message&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;and maintain the current behavior after the default changes, use:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  git config --global push.default matching&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;To squelch this message and adopt the new behavior now, use:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  git config --global push.default simple&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;When push.default is &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; to &lt;span class=&quot;string&quot;&gt;&#39;matching&#39;&lt;/span&gt;, git will push &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; branches&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;to the remote branches that already exist with the same name.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;In Git 2.0, Git will default to the more conservative &lt;span class=&quot;string&quot;&gt;&#39;simple&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;behavior, &lt;span class=&quot;built_in&quot;&gt;which&lt;/span&gt; only pushes the current branch to the corresponding&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote branch that &lt;span class=&quot;string&quot;&gt;&#39;git pull&#39;&lt;/span&gt; uses to update the current branch.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;See &lt;span class=&quot;string&quot;&gt;&#39;git help config&#39;&lt;/span&gt; and search &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;push.default&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; further information.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(the &lt;span class=&quot;string&quot;&gt;&#39;simple&#39;&lt;/span&gt; mode was introduced &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; Git 1.7.11. Use the similar mode&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;current&#39;&lt;/span&gt; instead of &lt;span class=&quot;string&quot;&gt;&#39;simple&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; you sometimes use older versions of Git)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;파일-만들어서-push-하기&quot;&gt;&lt;a href=&quot;#파일-만들어서-push-하기&quot; class=&quot;headerlink&quot; title=&quot;파일 만들어서 push 하기&quot;&gt;&lt;/a&gt;파일 만들어서 push 하기&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ touch a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git add .&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git commit -m &lt;span class=&quot;string&quot;&gt;&quot;[temp] make file &#39;a&#39;.&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git push&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;하면, 에러가 난다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;fatal: The remote end hung up unexpectedly&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;error: 레퍼런스를 &lt;span class=&quot;string&quot;&gt;&#39;User2@127.0.0.1:/home/project-a/project-a.git&#39;&lt;/span&gt;에 푸시하는데 실패했습니다&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;GIT 저장소인 /home/project-a/project-a.git에 &lt;code&gt;User2&lt;/code&gt; 사용자의 write 권한이 없어서 문제가 발생한 것이다.&lt;/p&gt;
&lt;h1 id=&quot;다시-Server-side&quot;&gt;&lt;a href=&quot;#다시-Server-side&quot; class=&quot;headerlink&quot; title=&quot;다시 Server side&quot;&gt;&lt;/a&gt;다시 Server side&lt;/h1&gt;&lt;h2 id=&quot;group-추가-및-permission-부여&quot;&gt;&lt;a href=&quot;#group-추가-및-permission-부여&quot; class=&quot;headerlink&quot; title=&quot;group 추가 및 permission 부여&quot;&gt;&lt;/a&gt;group 추가 및 permission 부여&lt;/h2&gt;&lt;p&gt;해당 프로젝트 사용자들을 위해 &lt;code&gt;project-a&lt;/code&gt;그룹에 사용자를 추가하자.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo usermod &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt; -G project&lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt; User2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;그리고-다시-Client-side&quot;&gt;&lt;a href=&quot;#그리고-다시-Client-side&quot; class=&quot;headerlink&quot; title=&quot;그리고 다시 Client side&quot;&gt;&lt;/a&gt;그리고 다시 Client side&lt;/h1&gt;&lt;p&gt;다시 &lt;code&gt;git push&lt;/code&gt;를 시도한다. 그리고 성공한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Counting objects: 3, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Writing objects: 100% (3/3), 219 bytes | 0 bytes/s, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Total 3 (delta 0), reused 0 (delta 0)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;To User2@127.0.0.1:/home/project&lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;/project-a.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * [new branch]      master -&amp;gt; master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/ko/v2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://git-scm.com/book/ko/v2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/13/2016-08-13-etc-git-server-installation/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Big-O Complexity</title>
      <link>http://lazyrodi.github.io/2016/08/09/2016-08-09-common-bigo/</link>
      <guid>http://lazyrodi.github.io/2016/08/09/2016-08-09-common-bigo/</guid>
      <pubDate>Tue, 09 Aug 2016 11:02:50 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Big-O-분석법-Big-O-analysis&quot;&gt;&lt;a href=&quot;#Big-O-분석법-Big-O-analysis&quot; class=&quot;headerlink&quot; title=&quot;Big-O 분석법 (Big-O analysis)&quot;&gt;&lt;/a&gt;Big-O 분석법 (B
      
      </description>
      
      <content:encoded>&lt;h2 id=&quot;Big-O-분석법-Big-O-analysis&quot;&gt;&lt;a href=&quot;#Big-O-분석법-Big-O-analysis&quot; class=&quot;headerlink&quot; title=&quot;Big-O 분석법 (Big-O analysis)&quot;&gt;&lt;/a&gt;Big-O 분석법 (Big-O analysis)&lt;/h2&gt;&lt;p&gt;입력 값의 개수에 따라 알고리즘이 수행되는데 걸리는 시간을 바탕으로 알고리즘의 효율성을 평가하는 실행 시간 분석법.&lt;/p&gt;
&lt;h2 id=&quot;Big-O-분석의-적용&quot;&gt;&lt;a href=&quot;#Big-O-분석의-적용&quot; class=&quot;headerlink&quot; title=&quot;Big-O 분석의 적용&quot;&gt;&lt;/a&gt;Big-O 분석의 적용&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;입력 값이 무엇인지 확인하고 어떤 것을 n으로 놓아야 할지 결정한다.&lt;/li&gt;
&lt;li&gt;알고리즘에서 수행해야 할 연산 횟수를 n의 식으로 표현한다.&lt;/li&gt;
&lt;li&gt;차수가 제일 높은 항만 남긴다.&lt;/li&gt;
&lt;li&gt;모든 상수 인수를 없앤다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Big-O-알고리즘의-종류&quot;&gt;&lt;a href=&quot;#Big-O-알고리즘의-종류&quot; class=&quot;headerlink&quot; title=&quot;Big-O 알고리즘의 종류&quot;&gt;&lt;/a&gt;Big-O 알고리즘의 종류&lt;/h2&gt;&lt;h4 id=&quot;O-1&quot;&gt;&lt;a href=&quot;#O-1&quot; class=&quot;headerlink&quot; title=&quot;O(1)&quot;&gt;&lt;/a&gt;O(1)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;상수 실행 시간(constant running time)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;가장 빠른 알고리즘이며 이 경우는 거의 없다.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    result = n * n&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;O-log-n&quot;&gt;&lt;a href=&quot;#O-log-n&quot; class=&quot;headerlink&quot; title=&quot;O(log n)&quot;&gt;&lt;/a&gt;O(log n)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;로그 알고리즘(logarithmic algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;실행 시간이 입력 크기의 log에 비례해서 늘어나는 알고리즘.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;logarithmatic&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    result = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; n &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        n //= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        result += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;O-n&quot;&gt;&lt;a href=&quot;#O-n&quot; class=&quot;headerlink&quot; title=&quot;O(n)&quot;&gt;&lt;/a&gt;O(n)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;선형 알고리즘(linear algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;실행 시간이 입력크기에 비례하는 알고리즘.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;O(n)&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n, A)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; A[i] == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;O(n + m)&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n, m)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    result = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        result += i&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(m):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        result += j&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;O-n-log-n&quot;&gt;&lt;a href=&quot;#O-n-log-n&quot; class=&quot;headerlink&quot; title=&quot;O(n log n)&quot;&gt;&lt;/a&gt;O(n log n)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;초선형 알고리즘(superlinear algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;속도가 선형 알고리즘과 다항식 알고리즘의 중간쯤이다.&lt;/p&gt;
&lt;h4 id=&quot;O-n-2&quot;&gt;&lt;a href=&quot;#O-n-2&quot; class=&quot;headerlink&quot; title=&quot;O(n^2)&quot;&gt;&lt;/a&gt;O(n^2)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;이차 알고리즘(quadratic algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;입력 크기의 제곱으로 시간이 늘어난다.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;quadratic&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    result = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(i, n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            result += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;O-n-c&quot;&gt;&lt;a href=&quot;#O-n-c&quot; class=&quot;headerlink&quot; title=&quot;O(n^c)&quot;&gt;&lt;/a&gt;O(n^c)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;다항식 알고리즘(polynomial algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;입력 크기가 늘어나면 실행 시간이 빠르게 늘어난다.&lt;/p&gt;
&lt;h4 id=&quot;O-c-n&quot;&gt;&lt;a href=&quot;#O-c-n&quot; class=&quot;headerlink&quot; title=&quot;O(c^n)&quot;&gt;&lt;/a&gt;O(c^n)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;지수 알고리즘(exponential algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;다항식 알고리즘보다 실행 속도가 빠르게 늘어난다.&lt;/p&gt;
&lt;h4 id=&quot;O-n-1&quot;&gt;&lt;a href=&quot;#O-n-1&quot; class=&quot;headerlink&quot; title=&quot;O(n!)&quot;&gt;&lt;/a&gt;O(n!)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;팩토리얼 알고리즘(factorial algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;가장 느린 알고리즘으로 n의 값이 작다고 해도 사용이 힘든 수준으로 느려진다.&lt;/p&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;프로그래밍 면접 이렇게 준비한다 - 한빛미디어&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%A0%90%EA%B7%BC_%ED%91%9C%EA%B8%B0%EB%B2%95&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://ko.wikipedia.org/wiki/%EC%A0%90%EA%B7%BC_%ED%91%9C%EA%B8%B0%EB%B2%95&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://codility.com/programmers/lessons/1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/programmers/lessons/1/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Time_complexity&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://en.wikipedia.org/wiki/Time_complexity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/09/2016-08-09-common-bigo/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Linux Troubleshooting</title>
      <link>http://lazyrodi.github.io/2016/08/09/2016-08-09-troubleshooting-linux/</link>
      <guid>http://lazyrodi.github.io/2016/08/09/2016-08-09-troubleshooting-linux/</guid>
      <pubDate>Tue, 09 Aug 2016 01:00:50 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;&lt;p&gt;아래 글들은 Ubuntu에 대한 내용입니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;노트북-절전모드-진입-시-네트워크가-끊어지는-문제&quot;&gt;&lt;a href=&quot;#노트북-절전모드-진입-시-네트워크가-끊어지는-문제&quot; class=
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;&lt;p&gt;아래 글들은 Ubuntu에 대한 내용입니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;노트북-절전모드-진입-시-네트워크가-끊어지는-문제&quot;&gt;&lt;a href=&quot;#노트북-절전모드-진입-시-네트워크가-끊어지는-문제&quot; class=&quot;headerlink&quot; title=&quot;노트북 절전모드 진입 시 네트워크가 끊어지는 문제&quot;&gt;&lt;/a&gt;노트북 절전모드 진입 시 네트워크가 끊어지는 문제&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;관리자 권한으로 /etc/systemd/logind.conf 파일에 &lt;code&gt;HandleLidSwitch=ignore&lt;/code&gt; 를 추가한다.&lt;/li&gt;
&lt;li&gt;Login daemon을 재 시작한다. &lt;code&gt;sudo restart systemd-logind&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;참조: &lt;a href=&quot;http://askubuntu.com/questions/360615/ubuntu-server-13-10-now-goes-to-sleep-when-closing-laptop-lid/361087#361087&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://askubuntu.com/questions/360615/ubuntu-server-13-10-now-goes-to-sleep-when-closing-laptop-lid/361087#361087&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;한글-깨짐-현상&quot;&gt;&lt;a href=&quot;#한글-깨짐-현상&quot; class=&quot;headerlink&quot; title=&quot;한글 깨짐 현상&quot;&gt;&lt;/a&gt;한글 깨짐 현상&lt;/h3&gt;&lt;p&gt;이 문제에 대한 해결책은 여기저기 다 다른 것 같지만…&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Language pack install&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install language-pack-ko&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install language-pack-ko-base&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Home 디렉토리(&lt;code&gt;cd ~&lt;/code&gt;)의 &lt;code&gt;.bashrc&lt;/code&gt; 또는 &lt;code&gt;.bash_profile&lt;/code&gt;에 &lt;code&gt;export LANG=ko_KR.UTF-8&lt;/code&gt; 추가&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;시스템 재시작&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;Putty-문제인-경우&quot;&gt;&lt;a href=&quot;#Putty-문제인-경우&quot; class=&quot;headerlink&quot; title=&quot;Putty 문제인 경우!!&quot;&gt;&lt;/a&gt;Putty 문제인 경우!!&lt;/h4&gt;&lt;p&gt;putty로 접속했을 때 깨지는 문제는 Ubuntu의 문제와 다를 수 있음.&lt;/p&gt;
&lt;p&gt;putty 실행 &amp;gt; Window &amp;gt; Translation &amp;gt; Remote character set에서 &lt;code&gt;UTF-8&lt;/code&gt;을 선택하면 문제 해결.&lt;/p&gt;
&lt;h3 id=&quot;sudo-권한-또는-root-비밀번호-분실-시&quot;&gt;&lt;a href=&quot;#sudo-권한-또는-root-비밀번호-분실-시&quot; class=&quot;headerlink&quot; title=&quot;sudo 권한 또는 root 비밀번호 분실 시&quot;&gt;&lt;/a&gt;sudo 권한 또는 root 비밀번호 분실 시&lt;/h3&gt;&lt;p&gt;그룹을 잘못 지정해서 sudo 권한을 상실해서 난감했었다. 아래와 같이 Recovery mode로 진입하여 해결할 수 있다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Recovery mode 진입&lt;ul&gt;
&lt;li&gt;부팅 시 좌측 Shift 키를 누르고 있으면 진입이 가능하다.&lt;/li&gt;
&lt;li&gt;한성 노트북에서는 이게 잘 되지 않아서 F2로 CMOS 진입하니 부팅 순서에 ubuntu가 두 개가 있어서 다른 것으로 진입하니 grub mode로 진입이 되었다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(recovery mode)로 되어있는 것을 선택하여 진입하고, 선택 메뉴가 나오면 &lt;code&gt;root        Drop to root shell prompt&lt;/code&gt; 를 선택한다.&lt;/li&gt;
&lt;li&gt;파티션의 write 권한 부여를 위해 remount한다.&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ mount -rw -o remount /&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;만약 root 비밀번호를 잃어버린 거라면 &lt;code&gt;passwd&lt;/code&gt;를 입력하여 비밀번호를 변경한다.&lt;/li&gt;
&lt;li&gt;나의 경우는 sudo 권한을 가진 계정이 모두 없어져서 곤란한 상황이었기 때문에 &lt;code&gt;$ visudo&lt;/code&gt; 를 수행하여 다음과 같이 root 아래 sudo권한을 원하는 계정을 추가하고 저장 후 &lt;code&gt;reboot&lt;/code&gt; 하면 끝.&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# User privilege specification&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;root ALL=(ALL:ALL) ALL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;계정 ALL=(ALL:ALL) ALL&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/09/2016-08-09-troubleshooting-linux/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Ubuntu server installation</title>
      <link>http://lazyrodi.github.io/2016/08/09/2016-08-09-docthread-install-ubuntu/</link>
      <guid>http://lazyrodi.github.io/2016/08/09/2016-08-09-docthread-install-ubuntu/</guid>
      <pubDate>Mon, 08 Aug 2016 23:00:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;ssh 접속해서 딴 짓 하려고 서버를 설치할래다가 기존에 그냥 Desktop용을 사용하던 것이 있어서 거기에 &lt;code&gt;openssh-server&lt;/code&gt;를 설치하기로 했습니다.&lt;/p&gt;
&lt;p&gt;그 전의 과정까지는 그래도 스스로를 위해 남겨두려…
      
      </description>
      
      <content:encoded>&lt;p&gt;ssh 접속해서 딴 짓 하려고 서버를 설치할래다가 기존에 그냥 Desktop용을 사용하던 것이 있어서 거기에 &lt;code&gt;openssh-server&lt;/code&gt;를 설치하기로 했습니다.&lt;/p&gt;
&lt;p&gt;그 전의 과정까지는 그래도 스스로를 위해 남겨두려…&lt;/p&gt;
&lt;h1 id=&quot;Download&quot;&gt;&lt;a href=&quot;#Download&quot; class=&quot;headerlink&quot; title=&quot;Download&quot;&gt;&lt;/a&gt;Download&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.ubuntu.com/server&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ubuntu 공식 사이트&lt;/a&gt;에서 Server 버전을 다운로드 받습니다.&lt;/p&gt;
&lt;p&gt;ISO 파일이 다운로드 됩니다.&lt;/p&gt;
&lt;h1 id=&quot;Installing&quot;&gt;&lt;a href=&quot;#Installing&quot; class=&quot;headerlink&quot; title=&quot;Installing&quot;&gt;&lt;/a&gt;Installing&lt;/h1&gt;&lt;p&gt;전체적인 과정은 &lt;a href=&quot;http://www.ubuntu.com/download/server/install-ubuntu-server&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Installing Ubuntu Server for general user&lt;/a&gt;페이지를 참조하세요.&lt;/p&gt;
&lt;h2 id=&quot;USB-만들기&quot;&gt;&lt;a href=&quot;#USB-만들기&quot; class=&quot;headerlink&quot; title=&quot;USB 만들기&quot;&gt;&lt;/a&gt;USB 만들기&lt;/h2&gt;&lt;h3 id=&quot;Rufus-다운로드&quot;&gt;&lt;a href=&quot;#Rufus-다운로드&quot; class=&quot;headerlink&quot; title=&quot;Rufus 다운로드&quot;&gt;&lt;/a&gt;Rufus 다운로드&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://rufus.akeo.ie/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://rufus.akeo.ie/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;부팅-가능한-USB-만들기&quot;&gt;&lt;a href=&quot;#부팅-가능한-USB-만들기&quot; class=&quot;headerlink&quot; title=&quot;부팅 가능한 USB 만들기&quot;&gt;&lt;/a&gt;부팅 가능한 USB 만들기&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to create a bootable USB stick on Windows&lt;/a&gt;에 잘 설명되어 있습니다.&lt;/p&gt;
&lt;h2 id=&quot;설치하기&quot;&gt;&lt;a href=&quot;#설치하기&quot; class=&quot;headerlink&quot; title=&quot;설치하기&quot;&gt;&lt;/a&gt;설치하기&lt;/h2&gt;&lt;p&gt;설치하려는 PC에 USB꼽고 부팅해서 쭉쭉 설치. 요새는 뭐 왠만한 것들은 알아서 다 해줘서 혼자 공부하기 위한 설치라면 쭉쭉 진행 가능합니다.&lt;/p&gt;
&lt;h3 id=&quot;리눅스-파티션&quot;&gt;&lt;a href=&quot;#리눅스-파티션&quot; class=&quot;headerlink&quot; title=&quot;리눅스 파티션&quot;&gt;&lt;/a&gt;리눅스 파티션&lt;/h3&gt;&lt;p&gt;리눅스와 유닉스 계열의 OS들은 Windows의 폴더 및 드라이브 개념이 없습니다.&lt;/p&gt;
&lt;p&gt;루트 디렉토리를 기준으로 파일 및 디렉토리들이 위치하며, &lt;code&gt;mount&lt;/code&gt; 명령을 통해 디렉토리와 HDD 등의 저장소를 연결하여 사용할 수 있습니다.&lt;/p&gt;
&lt;p&gt;리눅스의 파티션은 각각 아래의 용도로 사용됩니다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;파티션&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;루트 디렉토리.&lt;br&gt;최상위 디렉토리이며 &lt;code&gt;cd /&lt;/code&gt; 명령어를 통해 접근할 수 있습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/bin&lt;/td&gt;
&lt;td&gt;명령어들이 들어있으며 여기에 있는 명령어들은 모든 사용자들이 사용 가능합니다.&lt;br&gt;필수적인 명령어들 및 시스템 부팅과 관련된 파일들이 모여있습니다.&lt;br&gt;커널 이미지인 &lt;code&gt;vmlinuz&lt;/code&gt;가 여기에 위치해 있습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/dev&lt;/td&gt;
&lt;td&gt;디바이스 파일들.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc&lt;/td&gt;
&lt;td&gt;여러가지의 시스템 설정 파일들.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/home&lt;/td&gt;
&lt;td&gt;일반 사용자의 home 디렉토리.&lt;br&gt;hong이라는 사용자의 home 디렉토리는 일반적으로 &lt;code&gt;/home/hong&lt;/code&gt;이 됩니다. 이 경로는 설정을 통해 변경 가능합니다.&lt;br&gt;&lt;code&gt;cd ~&lt;/code&gt;를 통해 접근할 수 있습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/lib&lt;/td&gt;
&lt;td&gt;공유 라이브러리&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/mnt&lt;/td&gt;
&lt;td&gt;다른 파티션을 mount 할 때 이곳으로 합니다.&lt;br&gt;일반적으로 cdrom 사용 시 &lt;code&gt;/mnt/cdrom&lt;/code&gt;에 mount시켜서 사용합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/proc&lt;/td&gt;
&lt;td&gt;프로세스 정보를 담고 있는 파일들.&lt;br&gt;프로세스 정보는 &lt;code&gt;ps&lt;/code&gt; 명령어로도 확인할 수 있습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/root&lt;/td&gt;
&lt;td&gt;Super user(root)의 home 디렉토리.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/sbin&lt;/td&gt;
&lt;td&gt;Super user가 시스템을 운영하는데 필수적인 실행 파일들.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/tmp&lt;/td&gt;
&lt;td&gt;Temporary 디렉토리. 임시 저장 파일들이 거쳐갑니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/usr&lt;/td&gt;
&lt;td&gt;사용자들을 위한 여러가지 프로그램 및 설정 파일들.&lt;br&gt;리눅스/유닉스 디렉토리 구조 중 가장 크고 복잡하며 루트(/)와 비슷한 구조를 가집니다.&lt;br&gt;&lt;code&gt;/usr/bin&lt;/code&gt;, &lt;code&gt;/usr/lib&lt;/code&gt;, &lt;code&gt;usr/sbin&lt;/code&gt; 등 루트(/)에 들어있는 것들이 여기에 비슷하게 다 들어있으며, 패키지 등을 설치할 때 일반적으로 이쪽으로 저장됩니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/var&lt;/td&gt;
&lt;td&gt;로그 파일 및 시스템 관리와 관련된 파일들을 여기에 저장합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;Install-후-기본-설치하는-것들-개인-취향&quot;&gt;&lt;a href=&quot;#Install-후-기본-설치하는-것들-개인-취향&quot; class=&quot;headerlink&quot; title=&quot;Install 후 기본 설치하는 것들 (개인 취향)&quot;&gt;&lt;/a&gt;Install 후 기본 설치하는 것들 (개인 취향)&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get update           # 업데이트 저장소에서 업데이트 패키지 목록을 갱신&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get upgrade          # 패키지 목록과 보유한 목록을 비교하여 실제 패키지 업데이트를 수행&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install vim&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install curl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install samba    # Windows와의 파일 공유를 위해, https://help.ubuntu.com/lts/serverguide/samba.html&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install screen   # 터미널 하나로 multi processing을 하기 위해.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Openssh-설치&quot;&gt;&lt;a href=&quot;#Openssh-설치&quot; class=&quot;headerlink&quot; title=&quot;Openssh 설치&quot;&gt;&lt;/a&gt;Openssh 설치&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install openssh-server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;ssh-port-변경&quot;&gt;&lt;a href=&quot;#ssh-port-변경&quot; class=&quot;headerlink&quot; title=&quot;ssh port 변경&quot;&gt;&lt;/a&gt;ssh port 변경&lt;/h2&gt;&lt;p&gt;기본은 22번 port를 사용하지만 보안을 위해 맘에 드는 port를 정해서 변경하세요. &lt;del&gt;딱히 중요한 정보가 안 들어가고 공부용이면 대충 쓰세요. 문제 생기면 밀어버리면 되니까요.&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;관련해서 실무를 해본적이 없어서 보안 관리자들이 사용하는 절차에 대해서는 잘 모릅니다만 일반적으로(그럼 보안이 왜 필요한건지…)는 +10000 해서 10022번 port를 사용한다고 합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;/etc/services&lt;/code&gt; 파일에서 &lt;code&gt;ssh    22/tcp&lt;/code&gt; 및 &lt;code&gt;ssh    22/udp&lt;/code&gt; 의 port 번호를 변경합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; 파일에서 아래 부분을 변경합니다.&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# What ports, IPs and protocols we listen for&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Port 22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/li&gt;
&lt;li&gt;변경 후에는 &lt;code&gt;service ssh restart&lt;/code&gt; 명령을 통해 재시작합니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;사용자-추가&quot;&gt;&lt;a href=&quot;#사용자-추가&quot; class=&quot;headerlink&quot; title=&quot;사용자 추가&quot;&gt;&lt;/a&gt;사용자 추가&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ adduser gildonghong&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;SAMBA-설정&quot;&gt;&lt;a href=&quot;#SAMBA-설정&quot; class=&quot;headerlink&quot; title=&quot;SAMBA 설정&quot;&gt;&lt;/a&gt;SAMBA 설정&lt;/h1&gt;&lt;h2 id=&quot;SAMBA-사용자-추가&quot;&gt;&lt;a href=&quot;#SAMBA-사용자-추가&quot; class=&quot;headerlink&quot; title=&quot;SAMBA 사용자 추가&quot;&gt;&lt;/a&gt;SAMBA 사용자 추가&lt;/h2&gt;&lt;p&gt;  &lt;code&gt;smbpasswd -a &amp;#39;username&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;SAMBA-설정-1&quot;&gt;&lt;a href=&quot;#SAMBA-설정-1&quot; class=&quot;headerlink&quot; title=&quot;SAMBA 설정&quot;&gt;&lt;/a&gt;SAMBA 설정&lt;/h2&gt;&lt;p&gt;  &lt;code&gt;/etc/samba/smb.conf&lt;/code&gt; 를 열고 [homes] 부분을 다음과 같이 수정합니다. 더 자세한 설정 방법은 &lt;a href=&quot;https://help.ubuntu.com/lts/serverguide/samba.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ubuntu - samba&lt;/a&gt; 페이지를 참조하세요.&lt;br&gt;    &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[Homes]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    comment = Home Directories&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    browseable = yes            # no -&amp;gt; yes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    path = /home/$S             # 각 사용자가 자신의 home으로 접속되도록 변경&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    read only = no              # yes -&amp;gt; no&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;설정이 끝났다면 &lt;code&gt;service smbd restart&lt;/code&gt; 를 실행하여 samba daemon을 재시작합니다.&lt;/p&gt;
&lt;p&gt;Windows에서 시작 &amp;gt; 실행 &amp;gt;  &lt;code&gt;\\서버주소\아이디&lt;/code&gt; 로 접근할 수 있습니다.&lt;/p&gt;
&lt;h1 id=&quot;절전모드-시-네트워크가-끊기는-문제&quot;&gt;&lt;a href=&quot;#절전모드-시-네트워크가-끊기는-문제&quot; class=&quot;headerlink&quot; title=&quot;절전모드 시 네트워크가 끊기는 문제&quot;&gt;&lt;/a&gt;절전모드 시 네트워크가 끊기는 문제&lt;/h1&gt;&lt;p&gt;노트북 등이 절전모드(suspend 상태)로 전환되면 네트워크가 끊겨버립니다.&lt;/p&gt;
&lt;p&gt;이에 대한 해결은 &lt;a href=&quot;../2016-08-09-troubleshooting-linux#노트북-절전모드-진입-시-네트워크가-끊어지는-문제&quot; target=&quot;_blank&quot;&gt;노트북 절전모드 진입 시 네트워크가 끊어지는 문제&lt;/a&gt;에서 확인하실 수 있습니다.&lt;/p&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wp.smartdisk.org/?p=179&amp;amp;lang=ko&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wp.smartdisk.org/?p=179&amp;amp;lang=ko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linux.co.kr/home2/board/subbs/board.php?bo_table=lecture&amp;amp;wr_id=1342&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.linux.co.kr/home2/board/subbs/board.php?bo_table=lecture&amp;amp;wr_id=1342&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kjvvv.kr/2764&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://kjvvv.kr/2764&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://storycompiler.tistory.com/31&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://storycompiler.tistory.com/31&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linux.co.kr/home/lecture/?leccode=10644&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.linux.co.kr/home/lecture/?leccode=10644&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/09/2016-08-09-docthread-install-ubuntu/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Eclipse Setting</title>
      <link>http://lazyrodi.github.io/2016/08/08/2016-08-08-docthread-setting-eclipse/</link>
      <guid>http://lazyrodi.github.io/2016/08/08/2016-08-08-docthread-setting-eclipse/</guid>
      <pubDate>Mon, 08 Aug 2016 13:00:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;지극히 개인적인 Eclipse setting 정리.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Window &amp;gt; Preferences &amp;gt; General &amp;gt; Show heap status 체크&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;하단에 heap memory 용
      
      </description>
      
      <content:encoded>&lt;p&gt;지극히 개인적인 Eclipse setting 정리.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Window &amp;gt; Preferences &amp;gt; General &amp;gt; Show heap status 체크&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;하단에 heap memory 용량을 표시해주고, 휴지통 버튼 누르면 바로 memory를 확보할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Window &amp;gt; Preferences &amp;gt; General &amp;gt; Appearance &amp;gt; Theme 번경&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;취향따라. Dark&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Window &amp;gt; Preference &amp;gt; General &amp;gt; Workspace&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Text file encoding을 Other로 선택한 후 &lt;code&gt;UTF-8&lt;/code&gt;로 변경&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tab을 Space 바꾸기 (Indent 설정)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Neon을 설치하니까 자동으로 Tab이 Space 4칸으로 조정이 되어있다. (안 그랬었던 것 같은데… 뭐 좋은게 좋은거니… 엣헴)&lt;/li&gt;
&lt;li&gt;관련 설정은 Window &amp;gt; Preferences &amp;gt; General &amp;gt; Editors &amp;gt; Text Editors에 가면 &lt;code&gt;Displayed tab width&lt;/code&gt; 에서 칸 수를 설정하고 &lt;code&gt;Insert spaces for tabs&lt;/code&gt; 옵션의 체크를 통해 Tab으로 넣을 것인지 Space로 넣을 것인지 선택이 가능.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/08/2016-08-08-docthread-setting-eclipse/#disqus_thread</comments>
    </item>
    
    <item>
      <title>StringTokenizer</title>
      <link>http://lazyrodi.github.io/2016/08/07/2016-08-07-java-stringtokenizer/</link>
      <guid>http://lazyrodi.github.io/2016/08/07/2016-08-07-java-stringtokenizer/</guid>
      <pubDate>Sun, 07 Aug 2016 04:01:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;Algospot에서 이 문제 (&lt;a href=&quot;https://algospot.com/judge/problem/read/ZEROONE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://algospot.com/judge/prob
      
      </description>
      
      <content:encoded>&lt;p&gt;Algospot에서 이 문제 (&lt;a href=&quot;https://algospot.com/judge/problem/read/ZEROONE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://algospot.com/judge/problem/read/ZEROONE&lt;/a&gt;) 를 풀려다 보니 IO가 느려서 시간 초과가 계속 떴다.&lt;/p&gt;
&lt;p&gt;리플들을 보니 StringTokenizer를 이용해 시간을 줄이려고 노력했다는 것을 보았는데 난 부끄럽게도 이 Class를 본 적이 없으므로 찾아보았다.&lt;/p&gt;
&lt;p&gt;근데 IO랑 뭔 상관인지는 잘 모르겠다. 그냥 split보다 빠르게 하려고 StringTokenizer를 사용한 것 같다.&lt;/p&gt;
&lt;p&gt;아무튼 이 글과 관련 없이 함수 별 IO 속도 차이를 보기 위해서는 &lt;a href=&quot;https://algospot.com/forum/read/2496/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;여기&lt;/a&gt;를 참고하시라.&lt;/p&gt;
&lt;h1 id=&quot;결론&quot;&gt;&lt;a href=&quot;#결론&quot; class=&quot;headerlink&quot; title=&quot;결론&quot;&gt;&lt;/a&gt;결론&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;StringTokenizer: 형식이 정해진 문자열을 분리할 때 사용.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;String.split(): 형식이 정해지지 않은 문자열을 분리할 때 사용. JDK1.4에 추가되었음.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;속도: StringTokenizer &amp;gt; String.split()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;String.split()은 내부적으로 정규표현식을 사용하기 때문에 많은 처리가 필요할 경우 심하게 느려짐.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;주의점&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;StringTokenizer를 사용할 경우 parsing되는 데이터가 공백이라면 부적절하다. 데이터에 뭐라도 채워져 있어야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;예시로-보자&quot;&gt;&lt;a href=&quot;#예시로-보자&quot; class=&quot;headerlink&quot; title=&quot;예시로 보자&quot;&gt;&lt;/a&gt;예시로 보자&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.StringTokenizer;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String people[] = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String[] &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;Matthew, 01011111111, Male, Student&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;David, 01022222222, , Swimmer&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;Maria, 01033333333, Female, Student,  &quot;&lt;/span&gt;                &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String a : people) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            StringTokenizer st = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringTokenizer(a, &lt;span class=&quot;string&quot;&gt;&quot;, &quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            String[] temp = a.split(&lt;span class=&quot;string&quot;&gt;&quot;, &quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;----------&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;** StringTokenizer&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (st.hasMoreElements()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                System.out.println(st.nextToken());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;** String.split()&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String b : temp) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                System.out.println(b);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;----------&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;결과는-이렇다&quot;&gt;&lt;a href=&quot;#결과는-이렇다&quot; class=&quot;headerlink&quot; title=&quot;결과는 이렇다&quot;&gt;&lt;/a&gt;결과는 이렇다&lt;/h2&gt;&lt;p&gt;David에 대한 데이터를 보면 성별 정보를 빈 칸으로 해놓으니 StringTokenizer에서는 이를 무시해버렸다.&lt;/p&gt;
&lt;p&gt;Mariad의 마지막 데이터도 마찬가지이다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;----------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** StringTokenizer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Matthew&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01011111111&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Male&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Student&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** String.split()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Matthew&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01011111111&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Male&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Student&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** StringTokenizer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;David&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01022222222&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Swimmer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** String.split()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;David&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01022222222&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Swimmer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** StringTokenizer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Maria&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01033333333&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Female&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Student&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** String.split()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Maria&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01033333333&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Female&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Student&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://okky.kr/article/32363&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://okky.kr/article/32363&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stylekai.tistory.com/105&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://stylekai.tistory.com/105&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/07/2016-08-07-java-stringtokenizer/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Eclipse를 이용한 Python 사용</title>
      <link>http://lazyrodi.github.io/2016/08/05/2016-08-05-docthread-setting-python-into-eclipse/</link>
      <guid>http://lazyrodi.github.io/2016/08/05/2016-08-05-docthread-setting-python-into-eclipse/</guid>
      <pubDate>Fri, 05 Aug 2016 13:00:50 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;PyDev-설치&quot;&gt;&lt;a href=&quot;#PyDev-설치&quot; class=&quot;headerlink&quot; title=&quot;PyDev 설치&quot;&gt;&lt;/a&gt;PyDev 설치&lt;/h3&gt;&lt;p&gt;Help &amp;gt; Install new software &amp;gt; Add &amp;gt; &lt;
      
      </description>
      
      <content:encoded>&lt;h3 id=&quot;PyDev-설치&quot;&gt;&lt;a href=&quot;#PyDev-설치&quot; class=&quot;headerlink&quot; title=&quot;PyDev 설치&quot;&gt;&lt;/a&gt;PyDev 설치&lt;/h3&gt;&lt;p&gt;Help &amp;gt; Install new software &amp;gt; Add &amp;gt; &lt;/p&gt;
&lt;p&gt;Name: PyDev&lt;br&gt;Location: &lt;a href=&quot;http://pydev.org/updates&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pydev.org/updates&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;pyDev 체크 후 &amp;gt; Next &amp;gt; Next &amp;gt; I accept the … &amp;gt; Finish &amp;gt; Brainwy Software; pyDev; Brainwy 를 체크하여 certificate하고 &amp;gt; OK &amp;gt; restart OK&lt;/p&gt;
&lt;p&gt;New Project 생성할 때 &lt;code&gt;PyDev Project&lt;/code&gt;를 선택할 수 있게 됨.&lt;/p&gt;
&lt;p&gt;그냥 만들려고 하면 &lt;code&gt;Please configure an interpreter before procedding.&lt;/code&gt;이 뜸. 아래 설정 참조.&lt;/p&gt;
&lt;h3 id=&quot;python-interpreter-설정&quot;&gt;&lt;a href=&quot;#python-interpreter-설정&quot; class=&quot;headerlink&quot; title=&quot;python interpreter 설정&quot;&gt;&lt;/a&gt;python interpreter 설정&lt;/h3&gt;&lt;p&gt;우선, &lt;a href=&quot;http://python.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://python.org/&lt;/a&gt; 에서 python을 PC에 설치하고.&lt;/p&gt;
&lt;p&gt;Window &amp;gt; Preference &amp;gt; PyDev &amp;gt; Interpreters &amp;gt; Python Interpreter&lt;/p&gt;
&lt;p&gt;우 상단의 Quick Auto-Config를 선택하면 python path를 알아서 찾아줌.&lt;/p&gt;
&lt;p&gt;이후 Apply &amp;gt; OK&lt;/p&gt;
&lt;p&gt;다시 New Project 생성으로 가서 생성한다.&lt;/p&gt;
&lt;p&gt;Python Perspective 어쩌고 팝업 나오면 OK 해서 새 perspective를 추가한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;test.py&lt;/code&gt; 등으로 파일 생성하고, 코드 넣고, Ctrl + F11 로 빌드해서 아래쪽 콘솔에서 확인할 수 있다. 굳.&lt;/p&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/05/2016-08-05-docthread-setting-python-into-eclipse/#disqus_thread</comments>
    </item>
    
    <item>
      <title>직장생활</title>
      <link>http://lazyrodi.github.io/2016/08/05/2016-08-05-docthread-worklife/</link>
      <guid>http://lazyrodi.github.io/2016/08/05/2016-08-05-docthread-worklife/</guid>
      <pubDate>Fri, 05 Aug 2016 10:47:50 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;입사&quot;&gt;&lt;a href=&quot;#입사&quot; class=&quot;headerlink&quot; title=&quot;입사&quot;&gt;&lt;/a&gt;입사&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://ppss.kr/archives/82090&quot; target=&quot;_blank&quot; rel=&quot;external&quot;
      
      </description>
      
      <content:encoded>&lt;h1 id=&quot;입사&quot;&gt;&lt;a href=&quot;#입사&quot; class=&quot;headerlink&quot; title=&quot;입사&quot;&gt;&lt;/a&gt;입사&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://ppss.kr/archives/82090&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;새로운 입사자를 환영하는 방법, 웰컴키트&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;조직문화&quot;&gt;&lt;a href=&quot;#조직문화&quot; class=&quot;headerlink&quot; title=&quot;조직문화&quot;&gt;&lt;/a&gt;조직문화&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://m.media.daum.net/m/media/economic/newsview/20160601070102846&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;“1분도 아까워” 현대차 직원들의 점심 레이스&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.zdnet.co.kr/column/column_view.asp?artice_id=20160809121254&amp;amp;from=Mobile&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zdnet - 문제 직원은 없고, 문제상사만 있습니다&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;업무&quot;&gt;&lt;a href=&quot;#업무&quot; class=&quot;headerlink&quot; title=&quot;업무&quot;&gt;&lt;/a&gt;업무&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://brunch.co.kr/@lovewant/49&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;직장에서 깨지며 배운 100% Real 보고서 스킬&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://insight.co.kr/newsRead.php?ArtNo=71185&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;세계적인 기업 이끄는 CEO들의 사무실 10&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;퇴사&quot;&gt;&lt;a href=&quot;#퇴사&quot; class=&quot;headerlink&quot; title=&quot;퇴사&quot;&gt;&lt;/a&gt;퇴사&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://ppss.kr/archives/87490&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;두 번째 퇴사&lt;/a&gt;&lt;/p&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/05/2016-08-05-docthread-worklife/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Codility</title>
      <link>http://lazyrodi.github.io/2016/08/05/2016-08-05-common-codility/</link>
      <guid>http://lazyrodi.github.io/2016/08/05/2016-08-05-common-codility/</guid>
      <pubDate>Thu, 04 Aug 2016 23:02:50 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://codility.com/programmers/lessons/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/programmers/lessons/
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://codility.com/programmers/lessons/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/programmers/lessons/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Iterations&quot;&gt;&lt;a href=&quot;#Iterations&quot; class=&quot;headerlink&quot; title=&quot;Iterations&quot;&gt;&lt;/a&gt;Iterations&lt;/h1&gt;&lt;p&gt;프로그램 내에서 반복되는 부분. 보통 &lt;code&gt;for&lt;/code&gt;나 &lt;code&gt;while&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;For&quot;&gt;&lt;a href=&quot;#For&quot; class=&quot;headerlink&quot; title=&quot;For&quot;&gt;&lt;/a&gt;For&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; some_variable &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range_of_values:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    loop_body&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) :&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; i&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) :&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; i&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;While&quot;&gt;&lt;a href=&quot;#While&quot; class=&quot;headerlink&quot; title=&quot;While&quot;&gt;&lt;/a&gt;While&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; some_condition:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    loop_body&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;result = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; n &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    n = n // &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    result += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;a = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;b = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; a &amp;lt;= n:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    c = a + b&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    a = b&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    b = c&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Collection을-사용한-반복&quot;&gt;&lt;a href=&quot;#Collection을-사용한-반복&quot; class=&quot;headerlink&quot; title=&quot;Collection을 사용한 반복&quot;&gt;&lt;/a&gt;Collection을 사용한 반복&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;days = [&lt;span class=&quot;string&quot;&gt;&#39;Monday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Tuesday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Wednesday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Thursday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Friday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Saturday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Sunday&#39;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; day &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; days:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; day&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;days = set([&lt;span class=&quot;string&quot;&gt;&#39;Monday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Tuesday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Wednesday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Thursday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Friday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Saturday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Sunday&#39;&lt;/span&gt;])&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; day &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; days:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; day&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// set을 사용할 경우 출력 순서가 set에서 지정한 순서대로 나오지는 않는다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Monday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Tuesday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Friday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Wednesday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Thursday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Sunday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Saturday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// key-value 구조로 사용할 수도 있다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;days = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;mon&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Monday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;tue&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Tuesday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;wed&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Wednesday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;thu&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Thursday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;fri&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Friday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;sat&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Saturday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;sun&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Sunday&#39;&lt;/span&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; day &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; days:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; day, &lt;span class=&quot;string&quot;&gt;&#39;stand for&#39;&lt;/span&gt;, days[day]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;wed stands for Wednesday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sun stands for Sunday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fri stands for Friday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tue stands for Turesday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mon stands for Monday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;thu stands for Thursday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sat stands for Saturday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;h3 id=&quot;BinaryGap&quot;&gt;&lt;a href=&quot;#BinaryGap&quot; class=&quot;headerlink&quot; title=&quot;BinaryGap&quot;&gt;&lt;/a&gt;BinaryGap&lt;/h3&gt;&lt;p&gt;python&lt;br&gt;1차: 45점 (이 때는 잘 몰라서 링크 안 남겨둠)&lt;br&gt;2차: 100점 - &lt;a href=&quot;https://codility.com/demo/results/training8TW2WC-EH5/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/training8TW2WC-EH5/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Arrays&quot;&gt;&lt;a href=&quot;#Arrays&quot; class=&quot;headerlink&quot; title=&quot;Arrays&quot;&gt;&lt;/a&gt;Arrays&lt;/h1&gt;&lt;p&gt;하나의 공간에 여러 아이템을 저장할 수 있는 자료구조.&lt;/p&gt;
&lt;h2 id=&quot;Creation&quot;&gt;&lt;a href=&quot;#Creation&quot; class=&quot;headerlink&quot; title=&quot;Creation&quot;&gt;&lt;/a&gt;Creation&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;shopping = [&lt;span class=&quot;string&quot;&gt;&#39;bread&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;butter&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;cheese&#39;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;shopping = []         &lt;span class=&quot;comment&quot;&gt;# empty list&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;shopping = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] * &lt;span class=&quot;number&quot;&gt;365&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# value가 0인 365개의 array&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Accesing-and-Modifying&quot;&gt;&lt;a href=&quot;#Accesing-and-Modifying&quot; class=&quot;headerlink&quot; title=&quot;Accesing and Modifying&quot;&gt;&lt;/a&gt;Accesing and Modifying&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;shopping[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;temperatures[&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;shopping += [&lt;span class=&quot;string&quot;&gt;&#39;eggs&#39;&lt;/span&gt;] &lt;span class=&quot;comment&quot;&gt;# 이런 식으로 array에 추가 가능.&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Iterating&quot;&gt;&lt;a href=&quot;#Iterating&quot; class=&quot;headerlink&quot; title=&quot;Iterating&quot;&gt;&lt;/a&gt;Iterating&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;negative&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(temperatures)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    N = len(temperatures)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    days = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(N):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; temperatures[i] &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            days += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; days&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;위의 코드를 아래처럼 간단히 할 수 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;negative&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(temperatures)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    days = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; t &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; temperatures:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; t &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            days += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; days&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Basic-array-operations&quot;&gt;&lt;a href=&quot;#Basic-array-operations&quot; class=&quot;headerlink&quot; title=&quot;Basic array operations&quot;&gt;&lt;/a&gt;Basic array operations&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;len([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]) == &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;] * &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; == [&lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] + [&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;] == [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;butter&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&#39;bread&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;butter&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;cheese&#39;&lt;/span&gt;] == &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;연습하기&quot;&gt;&lt;a href=&quot;#연습하기&quot; class=&quot;headerlink&quot; title=&quot;연습하기&quot;&gt;&lt;/a&gt;연습하기&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(A)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    N = len(A)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(N // &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        k = N - i - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        A[i], A[k] = A[k], A[i]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; A&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;A.reverse() &lt;span class=&quot;comment&quot;&gt;# python native&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;문제-1&quot;&gt;&lt;a href=&quot;#문제-1&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;h3 id=&quot;CyclicRotation&quot;&gt;&lt;a href=&quot;#CyclicRotation&quot; class=&quot;headerlink&quot; title=&quot;CyclicRotation&quot;&gt;&lt;/a&gt;CyclicRotation&lt;/h3&gt;&lt;p&gt;python&lt;br&gt;1차: 37점 (이 때는 잘 몰라서 링크 안 남겨둠)&lt;br&gt;2차: 100점 - &lt;a href=&quot;https://codility.com/demo/results/training35CKZE-B4V/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/training35CKZE-B4V/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;OddOccurrencesInArray&quot;&gt;&lt;a href=&quot;#OddOccurrencesInArray&quot; class=&quot;headerlink&quot; title=&quot;OddOccurrencesInArray&quot;&gt;&lt;/a&gt;OddOccurrencesInArray&lt;/h3&gt;&lt;p&gt;python: 100점 - &lt;a href=&quot;https://codility.com/demo/results/trainingR3ZUNQ-JXX/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/trainingR3ZUNQ-JXX/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Time-Complexity&quot;&gt;&lt;a href=&quot;#Time-Complexity&quot; class=&quot;headerlink&quot; title=&quot;Time Complexity&quot;&gt;&lt;/a&gt;Time Complexity&lt;/h1&gt;&lt;a href=&quot;/2016/08/09/2016-08-09-common-bigo/&quot; title=&quot;BIG O Complexity&quot;&gt;BIG O Complexity&lt;/a&gt;에 따로 정리.&lt;br&gt;&lt;br&gt;### TapeEquilibrium&lt;br&gt;&lt;br&gt;python: 100점 - &lt;a href=&quot;https://codility.com/demo/results/trainingWJH42B-PFB/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/trainingWJH42B-PFB/&lt;/a&gt;&lt;br&gt;&lt;br&gt;### FrogJmp&lt;br&gt;&lt;br&gt;python: 100점 - &lt;a href=&quot;https://codility.com/demo/results/training8A2TYQ-AAP/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/training8A2TYQ-AAP/&lt;/a&gt;&lt;br&gt;&lt;br&gt;### PermMissingElem&lt;br&gt;&lt;br&gt;python: 100점 - &lt;a href=&quot;https://codility.com/demo/results/trainingZDKEVT-JMK/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/trainingZDKEVT-JMK/&lt;/a&gt;&lt;br&gt;&lt;br&gt;# Counting Elements&lt;br&gt;&lt;br&gt;O(n + m) 복잡도의 counting 알고리즘.&lt;br&gt;&lt;br&gt;배열 A에 들어있는 각 integer값이 몇 번이나 나오는지 count 배열에 카운팅한다.&lt;br&gt;&lt;br&gt;A = [1, 2, 3, 1, 3, 5] 라면, count = [0, 2, 1, 2, 0, 1] 이 된다.&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;counting&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(A, m)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    n = len(A)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    count = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] * (m + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        count[A[k]] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; count&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;다음과 같은 문제가 있다.&lt;/p&gt;
&lt;p&gt;A, B 두 개의 배열과 integer m이 주어지고, 각 원소 n은 0 &amp;lt;= n &amp;lt;= m 의 크기를 갖는다.&lt;/p&gt;
&lt;p&gt;배열 A, B 에서 각각 하나의 원소를 swap하여 배열 A, B 각각의 합이 같은지 확인하고 아니면 다른 원소를 swap해보는 동작을 구현한다고 하자.&lt;/p&gt;
&lt;p&gt;가장 간단한 방법은 모든 쌍을 swap하여 계속 비교하는 것이다. 이 경우 O(n^3)의 복잡도를 갖는다.&lt;/p&gt;
&lt;p&gt;이보다 조금 나은 방법으로 처음에 전체의 합을 구한 뒤 swap 시 전체 합이 어떻게 변할지에 대해 체크하는 방법(아래 코드, O(n^2))이 있다. (실제로 swap이 발생하진 않는다.)&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;slow_solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(A, B, m)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    n = len(A)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sum_a = sum(A)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sum_b = sum(B)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            change = B[j] - A[i]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sum_a += change&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sum_b -= change&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; sum_a == sum_b:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sum_a -= change&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sum_b += change&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;위의 방법보다 더 좋은 방법은 배열 A 원소의 수를 세고 배열 A와 B 요소들의 합의 차 d를 계산하는 방법이다.&lt;/p&gt;
&lt;p&gt;두 배열의 합의 차이인 d는 우리가 배열 A에서 어떤 값을 swap해야 하는지 알려준다. 왜냐하면 하나의 값을 swap할 때 두 개의 합이 동일해지기 때문이다.&lt;/p&gt;
&lt;p&gt;배열을 카운팅 한 후 이 값을 구하는 동작은 상수 시간 내에 가능하다.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fast_solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(A, B, m)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    n = len(A)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sum_a = sum(A)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sum_b = sum(B)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    d = sum_b - sum_a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; d % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    d //= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    count = counting(A, m)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;lt;= B[i] - d &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; B[i] - d &amp;lt;= m &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; count[B[i] - d] &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;PermCheck&quot;&gt;&lt;a href=&quot;#PermCheck&quot; class=&quot;headerlink&quot; title=&quot;PermCheck&quot;&gt;&lt;/a&gt;PermCheck&lt;/h3&gt;&lt;p&gt;python&lt;br&gt;1차: 30점 - &lt;a href=&quot;https://codility.com/demo/results/trainingHBR2ZE-W52/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/trainingHBR2ZE-W52/&lt;/a&gt;&lt;br&gt;2차: 70점 - &lt;a href=&quot;https://codility.com/demo/results/trainingDW7FCK-495/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/trainingDW7FCK-495/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;아직 paneless 문제인데 여기부터 벌써 한계가 찾아오다니… ㅠㅠ&lt;/p&gt;
&lt;h3 id=&quot;MissingInteger&quot;&gt;&lt;a href=&quot;#MissingInteger&quot; class=&quot;headerlink&quot; title=&quot;MissingInteger&quot;&gt;&lt;/a&gt;MissingInteger&lt;/h3&gt;&lt;p&gt;python&lt;br&gt;1차: 22점 - &lt;a href=&quot;https://codility.com/demo/results/training2P6BG5-N6S/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/training2P6BG5-N6S/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;FrogRiverOne&quot;&gt;&lt;a href=&quot;#FrogRiverOne&quot; class=&quot;headerlink&quot; title=&quot;FrogRiverOne&quot;&gt;&lt;/a&gt;FrogRiverOne&lt;/h3&gt;&lt;p&gt;python&lt;br&gt;1차: 54점 - &lt;a href=&quot;https://codility.com/demo/results/training3K6KVK-6NB/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/training3K6KVK-6NB/&lt;/a&gt;&lt;br&gt;2차: 100점 - &lt;a href=&quot;https://codility.com/demo/results/trainingU2PU2U-K5K/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/trainingU2PU2U-K5K/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;MaxCounters&quot;&gt;&lt;a href=&quot;#MaxCounters&quot; class=&quot;headerlink&quot; title=&quot;MaxCounters&quot;&gt;&lt;/a&gt;MaxCounters&lt;/h3&gt;</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/05/2016-08-05-common-codility/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hexo 한국어 번역</title>
      <link>http://lazyrodi.github.io/2016/08/02/2016-08-02-works-translate-hexo-site/</link>
      <guid>http://lazyrodi.github.io/2016/08/02/2016-08-02-works-translate-hexo-site/</guid>
      <pubDate>Tue, 02 Aug 2016 10:02:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;a href=&quot;http://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo.io&lt;/a&gt;에 한국어 설명이 없어서 직접 번역해 보았습니다.&lt;/p&gt;
&lt;p&gt;사이트 접속 후 우 상단에서 언어를 한국어로 변경하시거나 &lt;a 
      
      </description>
      
      <content:encoded>&lt;p&gt;&lt;a href=&quot;http://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo.io&lt;/a&gt;에 한국어 설명이 없어서 직접 번역해 보았습니다.&lt;/p&gt;
&lt;p&gt;사이트 접속 후 우 상단에서 언어를 한국어로 변경하시거나 &lt;a href=&quot;https://hexo.io/ko/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/ko/&lt;/a&gt;로 접속하시면 결과물을 확인하실 수 있습니다.&lt;/p&gt;
&lt;p&gt;영어는 잘 못하지만 &lt;del&gt;구글 번역기가 절 구원하시고&lt;/del&gt; 양이 많지 않아 하루면 끝날 줄 알았는데 꽤 많은 시간이 소요되었습니다.&lt;/p&gt;
&lt;p&gt;매뉴얼 또는 튜토리얼 그리고 회사에서는 규격을 번역하는 일은 스스로에게 굉장히 도움이 되는 일이라고 생각하고 있습니다.&lt;/p&gt;
&lt;p&gt;번역을 해보면서 얻을 수 있는 장점은 무궁무진합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;따로는 절대 공부하지 않을 영어를 직접 마주할 수 있고&lt;/li&gt;
&lt;li&gt;한 번 정리해 둠으로써 다음에는 문서를 편하게 볼 수 있습니다.&lt;/li&gt;
&lt;li&gt;심지어 자기 말투로 번역해두었기 때문에 남들의 번역서보다 가독성도 좋습니다(남들은 번역본을 욕할지언정).&lt;/li&gt;
&lt;li&gt;‘이런 때에는 이런 단어와 표현을 사용하는구나’를 배울 수 있습니다.&lt;/li&gt;
&lt;li&gt;작업을 완료했을 때 성취감을 얻을 수 있습니다.&lt;/li&gt;
&lt;li&gt;완벽하진 않지만 번역을 통해 문서가 설명하려고 하는 규격이나 동작 방식 등을 전부 다 훑어봄으로써 개요를 파악할 수 있습니다. 그리고 이 문서의 어디쯤 무슨 내용이 있었는지 기억하여 검색을 편하게 할 수 있게되죠.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;아마 제가 설명하지 못한 장점이 더욱 더 많이 있을겁니다.&lt;/p&gt;
&lt;p&gt;Hexo의 번역을 생각하게 된 이유는 우선 Hexo가 굉장히 맘에 들어서 사용하게 되었기 때문이고, 제가 가지고 있는 안 좋은 습관 떄문입니다.&lt;/p&gt;
&lt;p&gt;영문을 매끄럽게 읽어나가지 못하기 떄문에 일 할 때에도 한글로 한 번 번역을 하는 과정을 거치고 그 다음에 내용을 머리로 생각하는 것이 안 좋은 습관입니다.&lt;/p&gt;
&lt;p&gt;역량 부족이라고 해두겠습니다.&lt;/p&gt;
&lt;p&gt;결론은 한글로 된 문서를 편하게 보고 싶었습니다.&lt;/p&gt;
&lt;p&gt;번역을 할 때 어려움을 겪은 부분들을 정리해보면 다음과 같습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;file, thread, method, database 등의 단어를 영어로 놔둘 것인지 ‘파일’, ‘스레드’, ‘메소드’, ‘데이터베이스’ 등으로 한글로 변환할지에 대한 고민.&lt;/li&gt;
&lt;li&gt;마찬가지로 processing, reder, iterate, command 등의 표현을 어떻게 다룰 것인지에 대한 고민.&lt;/li&gt;
&lt;li&gt;직역을 할지 의역을 할지에 대한 고민.&lt;/li&gt;
&lt;li&gt;장난스런 말투를 사용할지 딱딱한 말투를 사용할지에 대한 고민.&lt;/li&gt;
&lt;li&gt;해석도 안 되는데 구글 번역기도 날 도와주지 않을 때.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;욕 먹을 고민부터 해야하는거 아니냐 하실 수도 있지만 스스로가 잘 못하는 것을 알기 때문에 그 또한 저한테 공부가 될 것이라 생각합니다.&lt;/p&gt;
&lt;p&gt;위의 과정을 마주하면서 스스로 굉장히 많이 생각하게 되어 발전할 수 있는 기회가 되었습니다.&lt;/p&gt;
&lt;p&gt;해결책도 이 공간에 턱하니 올려두면 좋겠지만 미숙해서 아직 답을 찾지 못하였습니다.&lt;/p&gt;
&lt;p&gt;여러 번 시행착오를 겪으면 되지 않을까 싶습니다. &lt;del&gt;이미 나이를 많이 먹었지만&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;여하튼 번역에 대한 결과물은 다음과 같습니다.&lt;/p&gt;
&lt;p&gt;원작자가 Pull Request를 받아줄 때 쾌감이 상당했습니다. 물론 코드가 아닌 번역이고, 원작자가 한국어를 모르니 검증 과정은 까다롭지 않았을 것이라 생각합니다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hexojs/site/pull/286&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/hexojs/site/pull/286&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;큰 일이건 작은 일이건 기분 좋은 경험이었습니다.&lt;/p&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/02/2016-08-02-works-translate-hexo-site/#disqus_thread</comments>
    </item>
    
    <item>
      <title>GIT command for me</title>
      <link>http://lazyrodi.github.io/2016/07/24/2016-07-24-etc-git/</link>
      <guid>http://lazyrodi.github.io/2016/07/24/2016-07-24-etc-git/</guid>
      <pubDate>Sun, 24 Jul 2016 01:02:50 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;간단한-GIT-command-정리&quot;&gt;&lt;a href=&quot;#간단한-GIT-command-정리&quot; class=&quot;headerlink&quot; title=&quot;간단한 GIT command 정리.&quot;&gt;&lt;/a&gt;간단한 GIT command 정리.&lt;/h2&gt;&lt;p&gt;회사에서
      
      </description>
      
      <content:encoded>&lt;h2 id=&quot;간단한-GIT-command-정리&quot;&gt;&lt;a href=&quot;#간단한-GIT-command-정리&quot; class=&quot;headerlink&quot; title=&quot;간단한 GIT command 정리.&quot;&gt;&lt;/a&gt;간단한 GIT command 정리.&lt;/h2&gt;&lt;p&gt;회사에서는 형상관리팀이 존재하고, &lt;a href=&quot;https://source.android.com/source/using-repo.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;repo&lt;/a&gt;와 &lt;a href=&quot;https://www.gerritcodereview.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gerrit&lt;/a&gt;을 사용하여 편하게 소스 관리를 하고있다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;git config --global user.name &amp;lt;name&amp;gt;&lt;/td&gt;
&lt;td&gt;사용자 이름을 설정한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git config --global user.email &amp;lt;email&amp;gt;&lt;/td&gt;
&lt;td&gt;사용자 이메일을 설정한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git clone &amp;lt;url&amp;gt;&lt;/td&gt;
&lt;td&gt;저장소(remote)로부터 소스를 가져온다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git branch &amp;lt;new-branch&amp;gt;&lt;/td&gt;
&lt;td&gt;Local에 새로운 branch를 만든다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git branch&lt;/td&gt;
&lt;td&gt;Local에 있는 branch들을 확인할 수 있다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git checkout &amp;lt;branch&amp;gt; 또는 &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;&amp;lt;branch&amp;gt;를 사용할 경우 branch를 변경하고, &amp;lt;filename&amp;gt;인 경우 add를 통해 stage에 올린 file을 내릴 수 있다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git push origin &amp;lt;branch name&amp;gt;&lt;/td&gt;
&lt;td&gt;Local에서 생성한 branch를 저장소에 push한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git diff&lt;/td&gt;
&lt;td&gt;현재 수정사항이 무엇을 변경한 것인지 확인할 수 있다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git status&lt;/td&gt;
&lt;td&gt;수정한 파일들의 현재 상태를 나타낸다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git add -A&lt;/td&gt;
&lt;td&gt;수정한 소스들을 stage area에 올린다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git commit [-m “description”]&lt;/td&gt;
&lt;td&gt;새 commit을 생성한다. &lt;code&gt;-m&lt;/code&gt; 옵션을 사용하면 한 줄 짜리 commit 내용을 만들 수 있다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git commit --amend&lt;/td&gt;
&lt;td&gt;한 번 commit 작성 후 다른 commit을 생성하고 싶지 않을 때, 수정하고 &lt;code&gt;git add -A&lt;/code&gt;하고 &lt;code&gt;git commit --amend&lt;/code&gt;를 하면 commit id를 새로 생성하지 않아도 된다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git push&lt;/td&gt;
&lt;td&gt;작성한 commit(들)을 저장소로 업로드한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git revert &amp;lt;commit id&amp;gt;&lt;/td&gt;
&lt;td&gt;push한 commit을 제거한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git log [–author &amp;lt;username&amp;gt;]&lt;/td&gt;
&lt;td&gt;&amp;lt;username&amp;gt;이 반영한 commit들을 볼 수 있다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git blame &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;&amp;lt;filename&amp;gt; line 별로 누가 반영한 것인지 확인할 수 있다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git merge &amp;lt;source branch&amp;gt;&lt;/td&gt;
&lt;td&gt;&amp;lt;source branch&amp;gt;의 내용을 현재 branch에 merge한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git reset [–hard HEAD^]&lt;/td&gt;
&lt;td&gt;강제로 HEAD^ 상태로 돌린다. HEAD^ 에는 commit id를 넣어도 된다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;그리고-아래는-Github를-사용하면서-배운-내용이다&quot;&gt;&lt;a href=&quot;#그리고-아래는-Github를-사용하면서-배운-내용이다&quot; class=&quot;headerlink&quot; title=&quot;그리고 아래는 Github를 사용하면서 배운 내용이다.&quot;&gt;&lt;/a&gt;그리고 아래는 Github를 사용하면서 배운 내용이다.&lt;/h2&gt;&lt;h3 id=&quot;원본-프로젝트를-fork해온-후-원본-프로젝트의-변경-사항을-merge하는-방법&quot;&gt;&lt;a href=&quot;#원본-프로젝트를-fork해온-후-원본-프로젝트의-변경-사항을-merge하는-방법&quot; class=&quot;headerlink&quot; title=&quot;원본 프로젝트를 fork해온 후 원본 프로젝트의 변경 사항을 merge하는 방법&quot;&gt;&lt;/a&gt;원본 프로젝트를 fork해온 후 원본 프로젝트의 변경 사항을 merge하는 방법&lt;/h3&gt;&lt;p&gt;순차적으로 수행하면 된다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;git remote add –track master upstream 원본저장소.git&lt;/td&gt;
&lt;td&gt;git remote는 새로운 원격 저장소를 추가하는 명령어이다. 원본 저장소를 upstream으로 등록한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git fetch upstream&lt;/td&gt;
&lt;td&gt;upstream(원본 저장소)으로부터 data를 받아온다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git merge upstream/master&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git push&lt;/td&gt;
&lt;td&gt;별도의 옵션을 붙이지 않으면 내 저장소로 변경 사항(merge)을 push한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://source.android.com/source/using-repo.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gerritcodereview.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gerrit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.google.co.kr/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=9&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0ahUKEwj-_sOOpYvOAhVLnZQKHccRBHQQFgg9MAg&amp;amp;url=https%3A%2F%2Fwww.atlassian.com%2Fdms%2Fwac%2Fimages%2Flanding%2Fgit%2Fatlassian_git_cheatsheet.pdf&amp;amp;usg=AFQjCNGqtOA5UPshK3MhDPRsKd3Cz0ytZQ&amp;amp;sig2=fJAYtlly_ZTG7Cd2mIY5bw&amp;amp;bvm=bv.127984354,d.dGo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atlassian GIT Cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cheat-sheets.org/saved-copy/git-cheat-sheet-v2.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cheat-sheets.org/saved-copy/git-cheat-sheet-v2.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cheat-sheets.org/saved-copy/git-cheat-sheet.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cheat-sheets.org/saved-copy/git-cheat-sheet.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cheat-sheets.org/saved-copy/Git_Cheat_Sheet_grey.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cheat-sheets.org/saved-copy/Git_Cheat_Sheet_grey.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cheat-sheets.org/saved-copy/github-git-cheat-sheet.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cheat-sheets.org/saved-copy/github-git-cheat-sheet.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/07/24/2016-07-24-etc-git/#disqus_thread</comments>
    </item>
    
    <item>
      <title>SVG (Scalable Vector Graphic)</title>
      <link>http://lazyrodi.github.io/2016/07/23/2016-07-23-etc-svg/</link>
      <guid>http://lazyrodi.github.io/2016/07/23/2016-07-23-etc-svg/</guid>
      <pubDate>Sat, 23 Jul 2016 12:02:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;Jekyll이나 Hexo를 이용할 때 SVG 포맷을 처음 보게 되어서 한 번 찾아보았다.&lt;/p&gt;
&lt;p&gt;SVG는 Scalable Vector Graphic 의 약자로 XML을 통해 Vector Image(단순하게 말해서 확대해도 깨지지 않는 이미지
      
      </description>
      
      <content:encoded>&lt;p&gt;Jekyll이나 Hexo를 이용할 때 SVG 포맷을 처음 보게 되어서 한 번 찾아보았다.&lt;/p&gt;
&lt;p&gt;SVG는 Scalable Vector Graphic 의 약자로 XML을 통해 Vector Image(단순하게 말해서 확대해도 깨지지 않는 이미지)를 표현할 수 있게 정의된 포맷이다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.w3.org/TR/SVG/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;W3C에서 SVG를 정의&lt;/a&gt;하고 있고 &lt;a href=&quot;http://www.w3schools.com/svg/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tutorial&lt;/a&gt;도 잘 정리해 두었다.&lt;/p&gt;
&lt;p&gt;사용법은 굉장히 단순하게 보이지만 파고들면 역시나 쉽지 않다. (물론 시간만 있다면 &lt;a href=&quot;http://www.w3schools.com/svg/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tutorial&lt;/a&gt;만 보고도 뭐든 그릴 수 있을 것 같긴 하다.)&lt;/p&gt;
&lt;p&gt;뭘 그려볼까 하다가 LG의 CI를 그려보았다.&lt;/p&gt;
&lt;p&gt;구성요소는 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;배경이 되는 빨간 &lt;code&gt;circle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;G의 기본이 되는 하얀 &lt;code&gt;circle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;우 상단 1/4 영역의 하얀 색을 지우기 위한 mask역할의 &lt;code&gt;path&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;G의 가로줄 &lt;code&gt;line&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;코 역할의 L을 그려줄 &lt;code&gt;polyline&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;아래의 소스를 ~~~.svg 로 저장하고 html에서 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag를 통해 사용할 수 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE svg PUBLIC &quot;-//W3C//DTD SVG 1.1//EN&quot; &quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;version&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1.1&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/2000/svg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns:xlink&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/1999/xlink&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;80&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;80&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- background circle --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;circle&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cx&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;40&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cy&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;40&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;r&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;40&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;fill&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;#C3013B&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- inner circle --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;circle&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cx&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;40&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cy&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;40&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;r&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;32&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fill:none;stroke:#FFFFFF;stroke-width:3&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- masking --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;d&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;M40,8 A32,32 0 0,1 72,39&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stroke:#C3013B;stroke-width:4;fill:none&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;x1&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;50&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;y1&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;40&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;x2&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;73.5&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;y2&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;40&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stroke:#FFFFFF;stroke-width:3&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- eye --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;circle&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cx&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;25&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;cy&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;27&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;r&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;5&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;fill&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;#FFFFFF&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- L --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;polyline&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;points&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;40,22 40,58 50,58&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fill:none;stroke:#FFFFFF;stroke-width:3&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;그림의 결과는 아래와 같다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/LG_CI.svg&quot; alt=&quot;LG_CI.svg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/SVG/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SVG Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3schools.com/svg/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SVG Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tutorials.jenkov.com/svg/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tutorials.jenkov.com/svg/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://css-tricks.com/scale-svg/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://css-tricks.com/scale-svg/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/07/23/2016-07-23-etc-svg/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Android Interview</title>
      <link>http://lazyrodi.github.io/2016/07/19/2016-07-19-interview-android/</link>
      <guid>http://lazyrodi.github.io/2016/07/19/2016-07-19-interview-android/</guid>
      <pubDate>Tue, 19 Jul 2016 10:00:00 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Android-application을-생성할-때-중요한-폴더-및-파일을-설명하라&quot;&gt;&lt;a href=&quot;#Android-application을-생성할-때-중요한-폴더-및-파일을-설명하라&quot; class=&quot;headerlink&quot; title=&quot;Andr
      
      </description>
      
      <content:encoded>&lt;h2 id=&quot;Android-application을-생성할-때-중요한-폴더-및-파일을-설명하라&quot;&gt;&lt;a href=&quot;#Android-application을-생성할-때-중요한-폴더-및-파일을-설명하라&quot; class=&quot;headerlink&quot; title=&quot;Android application을 생성할 때 중요한 폴더 및 파일을 설명하라.&quot;&gt;&lt;/a&gt;Android application을 생성할 때 중요한 폴더 및 파일을 설명하라.&lt;/h2&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Value&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;src&lt;/td&gt;&lt;td&gt;.java파일을 포함한다.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;gen&lt;/td&gt;&lt;td&gt;Compiler가 자동으로 생성하는 Resource파일인 R.java 파일을 가지고 있다. 이 파일은 수정해서는 아니된다.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;library&lt;/td&gt;&lt;td&gt;android.jar 파일을 포함한다. 해당 Android application에 대한 library들이다.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;assets&lt;/td&gt;&lt;td&gt;HTML, text, database등의 파일을 포함한다.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;bin&lt;/td&gt;&lt;td&gt;빌드 후 생성되는 .apk 파일을 포함한다.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;res&lt;/td&gt;&lt;td&gt;Application에서 사용하는 리소스 파일들을 포함한다.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;hr&gt;
&lt;h2 id=&quot;다음-AndroidManifest-xml-파일을-설명하라&quot;&gt;&lt;a href=&quot;#다음-AndroidManifest-xml-파일을-설명하라&quot; class=&quot;headerlink&quot; title=&quot;다음 AndroidManifest.xml 파일을 설명하라.&quot;&gt;&lt;/a&gt;다음 AndroidManifest.xml 파일을 설명하라.&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Package 이름(@string/app_name)을 포함한다.&lt;/li&gt;
&lt;li&gt;Version code가 1이고 이는 어플리케이션의 version(몇 번째 release인지)을 나타낸다.&lt;/li&gt;
&lt;li&gt;Version name이 1.0임을 알 수 있다.&lt;/li&gt;
&lt;li&gt;android.minSdkVersion이 8이고 이는 이 어플리케이션이 실행될 수 있는 Android OS의 최소 version을 나타낸다.&lt;/li&gt;
&lt;li&gt;MainActivity에 대한 activity 정보를 확인할 수 있다. Intent-filter를 통해 Main임을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;com.example.careerride&quot; android:versionCode=&quot;1&quot; android:versionName=&quot;1.0&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;uses-sdk android:minSdkVersion=&quot;8&quot; android:targetSdkVersion=&quot;18&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;application android:allowBackup=&quot;true&quot; android:icon=&quot;@drawable/ic_launcher&quot; android:label=&quot;@string/app_name&quot; android:theme=&quot;@style/AppTheme&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;activity android:name=&quot;com.example.careerride.MainActivity&quot; android:label=&quot;@string/app_name&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;action android:name=&quot;android.intent.action.MAIN&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/activity&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/application&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/manifest&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Activity에-대해-간단히-설명하라&quot;&gt;&lt;a href=&quot;#Activity에-대해-간단히-설명하라&quot; class=&quot;headerlink&quot; title=&quot;Activity에 대해 간단히 설명하라.&quot;&gt;&lt;/a&gt;Activity에 대해 간단히 설명하라.&lt;/h2&gt;&lt;p&gt;Activity는 User interface를 보여준다. Android application 생성 시 하나의 activity가 생성되며, 기본 이름은 MainActivity이며 맘대로 이름을 붙일 수 있다.&lt;/p&gt;
&lt;p&gt;기본적으로 Activity class를 상속받는다.&lt;/p&gt;
&lt;p&gt;Android Application은 0개 이상의 Activity를 가질 수 있으며 사용자와의 interaction을 위해 사용한다.&lt;/p&gt;
&lt;p&gt;Activity는 onCreate()로 시작하여 onDestroy()로 끝나는 Lifecycle을 가지고 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;packagecom.example.careerride; &lt;span class=&quot;comment&quot;&gt;//Application name careerride&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;importandroid.os.Bundle; &lt;span class=&quot;comment&quot;&gt;// Default packages&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;importandroid.app.Activity; &lt;span class=&quot;comment&quot;&gt;// Default packages&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;importandroid.view.Menu;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        setContentView(R.layout.activity_main);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;publicbooleanonCreateOptionsMenu(Menu menu) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Inflate the menu; this adds items to the action bar if it is present.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        getMenuInflater().inflate(R.menu.main, menu);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Android-Architecture의-key-component는-무엇인가&quot;&gt;&lt;a href=&quot;#Android-Architecture의-key-component는-무엇인가&quot; class=&quot;headerlink&quot; title=&quot;Android Architecture의 key component는 무엇인가?&quot;&gt;&lt;/a&gt;Android Architecture의 key component는 무엇인가?&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Linux Kernel&lt;/li&gt;
&lt;li&gt;Libraries&lt;/li&gt;
&lt;li&gt;Android Framework&lt;/li&gt;
&lt;li&gt;Android Applications&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Intent에-대해-설명하라&quot;&gt;&lt;a href=&quot;#Intent에-대해-설명하라&quot; class=&quot;headerlink&quot; title=&quot;Intent에 대해 설명하라.&quot;&gt;&lt;/a&gt;Intent에 대해 설명하라.&lt;/h2&gt;&lt;p&gt;Android의 기본 구성요소(Component)에는 Acivity, Service, ContentProvider, BroadcastReceiver 네 가지가 있는데 이 중 Activity, Service, BroadcastReceiver 사이에 data를 주고 받기 위해 intent를 사용한다.&lt;/p&gt;
&lt;p&gt;다른 activity를 호출하거나 service를 시작하거나 broadcast할 수 있다.&lt;/p&gt;
&lt;p&gt;Intent는 명시적 intent와 암시적 intent 두 가지로 나눌 수 있다.&lt;/p&gt;
&lt;p&gt;명시적 intent는 intent를 전달할 class 정보를 포함한다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Intent intent = newIntent (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, SecondActivity.class);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;startActivity(intent);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;암시적 intent는 동작을 원하는 값을 action값으로 하여 URI, MIME type, category 등과 함께 던지면 Android system에서 적절한 application을 찾아서 원하는 동작을 시켜준다.&lt;/p&gt;
&lt;p&gt;적절한 application을 찾는 과정에서 다른 application 내의 intent-filter를 검색하여 매칭되는지 확인한다.&lt;/p&gt;
&lt;p&gt;암시적 intent를 던질 때 call, sms 등과 같은 특정한 동작을 원할 때에는 자신이 그 동작을 수행할 수 있는 permission을 가지고 있어야 한다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Intent i = newIntent(android.content.Intent.ACTION_VIEW,Uri.parse(“http:&lt;span class=&quot;comment&quot;&gt;//www.amazon.com”));&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;startActivity(i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Intent i = newIntent (android.content.Intent.ACTION_DIAL,Uri.parse(“tel:+9923.....”));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;startActivity(i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/**/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Intent i = newIntent (android.content.Intent.ACTION_CALL,Uri.parse(“tel:+&lt;span class=&quot;number&quot;&gt;9923&lt;/span&gt;.....”));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;startActivity(i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* permission */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;uses-permissionandroid:name=”android.permission.CALL_PHONE”/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;uses-permissionandroid:name=”android.permission.INTERNET”/&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Android에서-SMS를-발신하기-위해서는-어떻게-해야-하는지-설명하라&quot;&gt;&lt;a href=&quot;#Android에서-SMS를-발신하기-위해서는-어떻게-해야-하는지-설명하라&quot; class=&quot;headerlink&quot; title=&quot;Android에서 SMS를 발신하기 위해서는 어떻게 해야 하는지 설명하라.&quot;&gt;&lt;/a&gt;Android에서 SMS를 발신하기 위해서는 어떻게 해야 하는지 설명하라.&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;“send sms” Button을 생성한다.&lt;/li&gt;
&lt;li&gt;AndroidManifest.xml 에 permisson을 설정한다.&lt;ul&gt;
&lt;li&gt;&lt;uses-permissionandroid:name=&quot;android.permission.send_sms&quot;&gt;&lt;/uses-permissionandroid:name=&quot;android.permission.send_sms&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;다음과 같은 메소드를 만들어서 SMS를 발신한다.&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;publicvoidsendmySMS(View v)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     SmsManager sms = SmsManager.getDefault();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     sms.sendTextMessage(&lt;span class=&quot;string&quot;&gt;&quot;5556&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Hello from careerRide&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&quot;SMSManager-class에-대해-설명하라&quot;&gt;&lt;a href=&quot;#SMSManager-class에-대해-설명하라&quot; class=&quot;headerlink&quot; title=&quot;SMSManager class에 대해 설명하라.&quot;&gt;&lt;/a&gt;SMSManager class에 대해 설명하라.&lt;/h2&gt;&lt;p&gt;SMS를 발신할 때 사용하는 class이며, 직접적으로 초기화하여 사용할 수 없고 getDefault()를 사용해야 한다.&lt;/p&gt;
&lt;p&gt;발신하는 메소드는 sendTextMessage()인데 다음과 같은 파라미터들을 갖는다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;destinationAddress: 수신자의 전화번호&lt;/li&gt;
&lt;li&gt;scAddress: Service center address (null로 설정해도 된다.)&lt;/li&gt;
&lt;li&gt;text: 메시지 내용&lt;/li&gt;
&lt;li&gt;sentIntent: 메시지가 발신되었음을 알려주는 intent.&lt;/li&gt;
&lt;li&gt;deliveryIntent: 메시지가 상대방에게 도착하였음을 알려주는 intent. 어플리케이션에서 delivery status option을 체크해줘야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;publicvoidsendmySMS(View v)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     SmsManager sms = SmsManager.getDefault();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     sms.sendTextMessage(&lt;span class=&quot;string&quot;&gt;&quot;5556&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Hello from careerRide&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;당신의-application에서-어떻게-Messaging-application을-사용할-수-있겠는가&quot;&gt;&lt;a href=&quot;#당신의-application에서-어떻게-Messaging-application을-사용할-수-있겠는가&quot; class=&quot;headerlink&quot; title=&quot;당신의 application에서 어떻게 Messaging application을 사용할 수 있겠는가?&quot;&gt;&lt;/a&gt;당신의 application에서 어떻게 Messaging application을 사용할 수 있겠는가?&lt;/h2&gt;&lt;p&gt;SMS 발신 permission을 얻은 후, Intent를 던지면 Default SMS Application으로 설정되어 있는 Application을 통해 SMS를 발신할 수 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Intent intent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent (android.content.Intent.ACTION_VIEW);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;intent.putExtra(&lt;span class=&quot;string&quot;&gt;&quot;address&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;5556; 5558;&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// Send the message to multiple recipient.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;itent.putExtra(&lt;span class=&quot;string&quot;&gt;&quot;sms_body&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Hello my friends!&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;intent.setType(&lt;span class=&quot;string&quot;&gt;&quot;vnd.android-dir/mms-sms&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;startActivity(intent);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Android에서-사용할-수-있는-Data-storage에는-어떤-것들이-있는가&quot;&gt;&lt;a href=&quot;#Android에서-사용할-수-있는-Data-storage에는-어떤-것들이-있는가&quot; class=&quot;headerlink&quot; title=&quot;Android에서 사용할 수 있는 Data storage에는 어떤 것들이 있는가?&quot;&gt;&lt;/a&gt;Android에서 사용할 수 있는 Data storage에는 어떤 것들이 있는가?&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;SharedPreferences&lt;/li&gt;
&lt;li&gt;SQLite&lt;/li&gt;
&lt;li&gt;ContentProvider&lt;/li&gt;
&lt;li&gt;File Storage&lt;/li&gt;
&lt;li&gt;Cloud Storage&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;SharedPreference에-대해-예시와-함께-설명하라&quot;&gt;&lt;a href=&quot;#SharedPreference에-대해-예시와-함께-설명하라&quot; class=&quot;headerlink&quot; title=&quot;SharedPreference에 대해 예시와 함께 설명하라.&quot;&gt;&lt;/a&gt;SharedPreference에 대해 예시와 함께 설명하라.&lt;/h2&gt;&lt;p&gt;SharedPreference는 Android storage 중 가장 간단한 방법을 가진다.&lt;/p&gt;
&lt;p&gt;Data를 XML 파일에 저장하는데 Key-Value pair로 한다. Primitive data type을 사용할 수 있다. (boolean, float, int, long, string)&lt;/p&gt;
&lt;p&gt;XML 파일은 data/data/자신의 패키지명(com.a.b)/shared-prefs/ 디렉토리에 저장된다.&lt;/p&gt;
&lt;p&gt;A Activity에서 저장한 내용도 B Activity에서 가져다가 사용할 수 있다.&lt;/p&gt;
&lt;h3 id=&quot;저장&quot;&gt;&lt;a href=&quot;#저장&quot; class=&quot;headerlink&quot; title=&quot;저장&quot;&gt;&lt;/a&gt;저장&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;SharedPreferences sf = getSharedPreferences(&lt;span class=&quot;string&quot;&gt;&quot;MyData&quot;&lt;/span&gt;, MODE_PRIVATE); &lt;span class=&quot;comment&quot;&gt;// &quot;Mydata&quot; XML file, MODE_PRIVATE은 이 어플리케이션에서만 사용하겠다는 의미.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SharedPreferences.Editor ed = sf.edit();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ed.putString(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;, txtusername.getText().toString());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ed.putString(&lt;span class=&quot;string&quot;&gt;&quot;pass&quot;&lt;/span&gt;, txtpassword.getText().toString());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ed.commit();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;읽어오기&quot;&gt;&lt;a href=&quot;#읽어오기&quot; class=&quot;headerlink&quot; title=&quot;읽어오기&quot;&gt;&lt;/a&gt;읽어오기&lt;/h3&gt;&lt;p&gt;getString(value, default) 형식으로 읽어오면 되며, value가 SharedPreference에 존재하지 않을 때 “default” 값을 가져온다.&lt;/p&gt;
&lt;p&gt;그리고 아래 코드에서는 name이나 pass 중 하나라도 못 읽어오면 “No data is found” Toast를 발생시킨다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String DEFAULT = &lt;span class=&quot;string&quot;&gt;&quot;N/A&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SharedPreferences sf = getSharedPreferences(&lt;span class=&quot;string&quot;&gt;&quot;MyData&quot;&lt;/span&gt;, Context.MODE_PRIVATE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String Uname = sf.getString(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;, DEFAULT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String UPass = sf.getString(&lt;span class=&quot;string&quot;&gt;&quot;pass&quot;&lt;/span&gt;, DEFAULT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(name.equals(DEFAULT) || Pass.equals(DEFAULT)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Toast.makeText(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;No data is found&quot;&lt;/span&gt;, Toast.LENGTH_LONG).show();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Txtusername.setText(Uname);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Txtpassword.setText(UPass) ;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;출처&quot;&gt;&lt;a href=&quot;#출처&quot; class=&quot;headerlink&quot; title=&quot;출처&quot;&gt;&lt;/a&gt;출처&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.careerride.com/android-interview-questions.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.careerride.com/android-interview-questions.aspx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/07/19/2016-07-19-interview-android/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Intent</title>
      <link>http://lazyrodi.github.io/2016/07/17/2016-07-17-android-intent/</link>
      <guid>http://lazyrodi.github.io/2016/07/17/2016-07-17-android-intent/</guid>
      <pubDate>Sat, 16 Jul 2016 23:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;Android의 기본 Application component에는 다음 네 가지가 있다.&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;Components&lt;/th&gt;&lt;th&gt;&lt;center&gt;Description&lt;/center&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Acti
      
      </description>
      
      <content:encoded>&lt;p&gt;Android의 기본 Application component에는 다음 네 가지가 있다.&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;Components&lt;/th&gt;&lt;th&gt;&lt;center&gt;Description&lt;/center&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Activity&lt;/td&gt;&lt;td&gt;사용자 인터페이스가 있는 화면 하나를 뜻한다.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Service&lt;/td&gt;&lt;td&gt;Background에서 실행되는 component이다.&lt;br&gt;오랫동안 실행되는 작업이나 원격 프로세스를 위한 작업이 주로 이루어지며 사용자 인터페이스를 제공하지 않는다.&lt;br&gt;(ex. 음악 재생, 파일 다운로드)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Content Provider&lt;/td&gt;&lt;td&gt;File system, Database 등의 저장소를 통합 관리한다.&lt;br&gt;권한이 허가된 경우 다른 application에서 접근 및 수정까지도 가능하다.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Broadcast Reciever&lt;/td&gt;&lt;td&gt;System이나 application은 특정한 상태나 data에 대해 broadcast를 날릴 수 있는데 이를 수신하여 처리한다.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;위 기본 요소 중 &lt;code&gt;Activity&lt;/code&gt;, &lt;code&gt;Service&lt;/code&gt;, &lt;code&gt;Broadcast Reciever&lt;/code&gt;는 &lt;code&gt;Intent&lt;/code&gt; 라는 비동기 메시지가 전달되어 활성화된다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Intent&quot;&gt;&lt;a href=&quot;#Intent&quot; class=&quot;headerlink&quot; title=&quot;Intent&quot;&gt;&lt;/a&gt;Intent&lt;/h2&gt;&lt;p&gt;Message Object의 일종으로 intent를 사용하여 다른 component들에게 작업을 요청할 수 있다.&lt;/p&gt;
&lt;p&gt;기본적으로는 다음 세 가지 목적으로 사용한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Activity의 시작&lt;/li&gt;
&lt;li&gt;Service의 시작&lt;/li&gt;
&lt;li&gt;Broadcast의 전달&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Activity의-시작&quot;&gt;&lt;a href=&quot;#Activity의-시작&quot; class=&quot;headerlink&quot; title=&quot;Activity의 시작&quot;&gt;&lt;/a&gt;Activity의 시작&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Intent를 &lt;code&gt;startActivity()&lt;/code&gt;로 전달하면 새 activity가 실행된다.&lt;/li&gt;
&lt;li&gt;Activity의 실행 결과를 돌려받고 싶다면 &lt;code&gt;startActivityForResult()&lt;/code&gt;를 호출한다.&lt;ul&gt;
&lt;li&gt;돌려받은 결과는 &lt;code&gt;onActivityResult()&lt;/code&gt;를 구현하여 처리할 수 있다. 결과 또한 intent로 수신한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Service의-시작&quot;&gt;&lt;a href=&quot;#Service의-시작&quot; class=&quot;headerlink&quot; title=&quot;Service의 시작&quot;&gt;&lt;/a&gt;Service의 시작&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Intent를 &lt;code&gt;startService()&lt;/code&gt;로 전달하면 일회성 작업이 수행된다.&lt;/li&gt;
&lt;li&gt;Client-Server interface로 설계된 service라면 &lt;code&gt;intent&lt;/code&gt;를 &lt;code&gt;bindService()&lt;/code&gt;로 전달하면 바인딩하여 사용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Broadcast의-전달&quot;&gt;&lt;a href=&quot;#Broadcast의-전달&quot; class=&quot;headerlink&quot; title=&quot;Broadcast의 전달&quot;&gt;&lt;/a&gt;Broadcast의 전달&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Intent를 &lt;code&gt;sendBroadcast()&lt;/code&gt;, &lt;code&gt;sendOrderedBroadcast()&lt;/code&gt;, &lt;code&gt;sendStickyBroadcast()&lt;/code&gt; 중 하나에 담아서 전달한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;모든 application&lt;/code&gt;들에 &lt;code&gt;message를 전달&lt;/code&gt;할 때 사용한다. (system에서 전달할 때는 특정 application을 지정해서 전달할 수도 있다.)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Intent의-기본-요소&quot;&gt;&lt;a href=&quot;#Intent의-기본-요소&quot; class=&quot;headerlink&quot; title=&quot;Intent의 기본 요소&quot;&gt;&lt;/a&gt;Intent의 기본 요소&lt;/h2&gt;&lt;p&gt;&lt;code&gt;ComponentName&lt;/code&gt;, &lt;code&gt;Action&lt;/code&gt;, &lt;code&gt;Data&lt;/code&gt;, &lt;code&gt;Category&lt;/code&gt;, &lt;code&gt;Extra&lt;/code&gt;, &lt;code&gt;Flags&lt;/code&gt; 가 있다.&lt;/p&gt;
&lt;h3 id=&quot;ComponentName&quot;&gt;&lt;a href=&quot;#ComponentName&quot; class=&quot;headerlink&quot; title=&quot;ComponentName&quot;&gt;&lt;/a&gt;ComponentName&lt;/h3&gt;&lt;p&gt;Optional 항목으로 Implicit intent로 사용할 경우 반드시 이름을 명시해야 한다.&lt;/p&gt;
&lt;p&gt;Service를 시작하는 경우에는 무조건 이 항목을 지정해야 한다. 그렇지 않으면 해당 intent에 어느 service가 응답할지 확신할 수 없고 사용자고 어떤 service가 시작되는지 알 수 없게 된다.&lt;/p&gt;
&lt;p&gt;ComponentName으로는 application의 패키지명이 포함된 Full-Qualified class name을 사용해야 한다. (ex. com.example.Example.Activity).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Intent 생성자&lt;/code&gt;를 사용하거나 &lt;code&gt;setComponent()&lt;/code&gt;, &lt;code&gt;setClass()&lt;/code&gt;, &lt;code&gt;setClassName()&lt;/code&gt;을 사용하여 &lt;code&gt;ComponentName을 설정&lt;/code&gt;할 수 있다.&lt;/p&gt;
&lt;h3 id=&quot;Action&quot;&gt;&lt;a href=&quot;#Action&quot; class=&quot;headerlink&quot; title=&quot;Action&quot;&gt;&lt;/a&gt;Action&lt;/h3&gt;&lt;p&gt;수행할 작업을 나타내며, 특정 application에서 커스터마이징한 action name을 사용할 수도 있지만 일반적으로는 Intent class나 다른 Framework class가 정의한 &lt;code&gt;Action 상수&lt;/code&gt;를 사용한다.&lt;/p&gt;
&lt;p&gt;커스터마이징할 경우 패키지명을 Prefix(접두사)에 포함시켜야 한다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String ACTION_TIMETRAVEL = &lt;span class=&quot;string&quot;&gt;&quot;com.example.action.TIMETRAVEL&quot;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Activity를 시작할 때 아래 두 가지 &lt;code&gt;ACTION&lt;/code&gt;을 사용할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ACTION_VIEW&lt;ul&gt;
&lt;li&gt;&lt;code&gt;startActivity()&lt;/code&gt;를 사용하며, 해당 Activity가 사용자에게 표시할 정보를 가지고 있을 때(ex. 갤러리) 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ACTION_SEND&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Shared intent&lt;/code&gt;라고도 하며, &lt;code&gt;startActivity()&lt;/code&gt;를 사용한다. 사용자가 다른 application을 통해 공유할 수 있는 data를 가지고 있을 때(ex. 이메일) 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Intent 생성자&lt;/code&gt;를 사용하거나 &lt;code&gt;setAction()&lt;/code&gt;을 사용하여 &lt;code&gt;Action을 설정&lt;/code&gt;할 수 있다.&lt;/p&gt;
&lt;h3 id=&quot;Data&quot;&gt;&lt;a href=&quot;#Data&quot; class=&quot;headerlink&quot; title=&quot;Data&quot;&gt;&lt;/a&gt;Data&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Action을 수행할 data&lt;/code&gt; 또는 해당 data의 &lt;code&gt;MIME type&lt;/code&gt;을 참조하는 &lt;code&gt;URI Object&lt;/code&gt;이다. 일반적으로 action명을 보면 data를 추측할 수 있는데 예를 들어 action이 &lt;code&gt;ACTION_EDIT&lt;/code&gt;라면 data에는 편집할 문서의 &lt;code&gt;URI&lt;/code&gt;가 들어있어야 한다.&lt;/p&gt;
&lt;p&gt;Intent 생성 시 &lt;code&gt;URI&lt;/code&gt;와 함께 &lt;code&gt;Data type(MIME type)&lt;/code&gt;의 지정이 중요하다. 만약 이미지 처리용 application이 있을 때, URI가 비슷하다 할지라도 이 application에서는 오디오 처리를 할 수는 엇다.따라서  &lt;code&gt;MIME type&lt;/code&gt;을 지정해주는 것이 좋다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Data URI&lt;/code&gt;만 설정하려면 &lt;code&gt;setData()&lt;/code&gt;를 사용하고, &lt;code&gt;MIME type&lt;/code&gt;만 설정하려면 &lt;code&gt;setType()&lt;/code&gt;을 사용하면 된다.&lt;/p&gt;
&lt;p&gt;두 가지 모두 사용할 경우 &lt;code&gt;setData()&lt;/code&gt;와 &lt;code&gt;setType()&lt;/code&gt;은 서로의 값을 덮어버리는 특성이 있으므로 반드시 &lt;code&gt;setDataAndType()&lt;/code&gt;을 사용해야 한다.&lt;/p&gt;
&lt;p&gt;일반적으로 Action과 Data는 다음과 같은 짝을 갖는 경우가 많다.&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;URI&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;ACTION_VIEW&lt;/th&gt;&lt;td&gt;content://contacts/people/1&lt;/td&gt;&lt;td&gt;1번 사람에 대한 정보를 표시한다.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;ACTION_DIAL&lt;/th&gt;&lt;td&gt;content://contacts/people/1&lt;/td&gt;&lt;td&gt;Dialer에 1번 사람의 번호를 채워서 보여준다.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;ACTION_VIEW&lt;/th&gt;&lt;td&gt;tel:123&lt;/td&gt;&lt;td&gt;Dialer에 ‘123’을 채워서 보여준다.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;ACTION_DIAL&lt;/th&gt;&lt;td&gt;tel:123&lt;/td&gt;&lt;td&gt;Dialer에 ‘123’을 채워서 보여준다.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;ACTION_EDIT&lt;/th&gt;&lt;td&gt;content://contacts/people/1&lt;/td&gt;&lt;td&gt;1번 사용자에 대한 정보를 수줭한다.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;ACTION_VIEW&lt;/th&gt;&lt;td&gt;content://contacts/people/&lt;/td&gt;&lt;td&gt;주소록 리스트를 띄운다. 이 리스트에서 특정 사용자를 선택할 경우 &lt;code&gt;ACTION_VIEW content://contacts/N&lt;/code&gt;이 시작된다.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;위의 두 가지 주 속성에 더하여, 아래에 설명할 몇 가지의 부 속성을 사용할 수 있다.&lt;/p&gt;
&lt;h3 id=&quot;Category&quot;&gt;&lt;a href=&quot;#Category&quot; class=&quot;headerlink&quot; title=&quot;Category&quot;&gt;&lt;/a&gt;Category&lt;/h3&gt;&lt;p&gt;Optional 항목이며 Intent를 처리해야 하는 component에 대한 추가 정보를 담고있다.&lt;/p&gt;
&lt;p&gt;몇 가지 보편적인 Category의 예이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CATEGORY_LAUNCHER&lt;ul&gt;
&lt;li&gt;Application 진입 시 최초의 Activity임을 의미한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CATEGORY_ALTERNATIVE&lt;ul&gt;
&lt;li&gt;Data의 일부에 대해 사용자가 사용할 수 있는 대체 action들에 대한 목록을 포함할 것을 의미한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CATEGORY_BROWSABLE&lt;ul&gt;
&lt;li&gt;대상 Activity가 스스로 Web browser에게 자신을 시작할 권한을 주며, link를 통해 참조된 data를 표시하게 한다. 이미지, 이메일, 메시지 등이 해당된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Category 지정은 &lt;code&gt;addCategory()&lt;/code&gt;를 통해서 설정한다.&lt;/p&gt;
&lt;h3 id=&quot;Type&quot;&gt;&lt;a href=&quot;#Type&quot; class=&quot;headerlink&quot; title=&quot;Type&quot;&gt;&lt;/a&gt;Type&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Intent data의 명시적인 type(MIME type)을 정의한다. 일반적인 경우 type은 data 자신으로부터 추측할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Component&quot;&gt;&lt;a href=&quot;#Component&quot; class=&quot;headerlink&quot; title=&quot;Component&quot;&gt;&lt;/a&gt;Component&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Intent에 사용하기 위한 component class의 명시적인 이름을 정의한다. 일반적으로 이 항목은 intent 내의 다른 정보(action, data/type, category)에 의해 정의되고 이를 다룰 수 있는 component에 매칭된다. 만약 이 속성이 세팅될 경우 아무 동작도 수행하지 않으며 이 component는 그 자체로만 사용된다. 이 속성을 정의함으로 인해 모든 다른 Intent 속성들은 optional 항목이 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Extras&quot;&gt;&lt;a href=&quot;#Extras&quot; class=&quot;headerlink&quot; title=&quot;Extras&quot;&gt;&lt;/a&gt;Extras&lt;/h3&gt;&lt;p&gt;요청한 작업을 수행하기 위한 추가 정보를 담고 있다. &lt;code&gt;Key-Value pair&lt;/code&gt;로 이루어져 있다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;putExtras()&lt;/code&gt; 메소드를 사용하며, 모든 extra data를 갖는 &lt;code&gt;Bundle&lt;/code&gt;을 생성하여 직접 &lt;code&gt;putExtras()&lt;/code&gt;로 삽입할 수도 있다.&lt;/p&gt;
&lt;p&gt;예를 들어, &lt;code&gt;ACTION_SEND&lt;/code&gt;로 이메일을 전송할 경우, “받는 사람”을 &lt;code&gt;EXTRA_EMAIL&lt;/code&gt;로 지정하고, “제목”을 &lt;code&gt;EXTRA_SUBJECT&lt;/code&gt;로 할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Intent class&lt;/code&gt;는 표준화된 data type들에 대해 많은 EXTRA_*를 지원하고 있다. 자신의 application만의 특정 extra key를 사용해야 할 경우 Package name을 prefix(접두사)로 포함시켜야 한다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String EXTRA_GIGAWATTS = &lt;span class=&quot;string&quot;&gt;&quot;com.example.EXTRA_GIGAWATTS&quot;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Flags&quot;&gt;&lt;a href=&quot;#Flags&quot; class=&quot;headerlink&quot; title=&quot;Flags&quot;&gt;&lt;/a&gt;Flags&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Intent class&lt;/code&gt;에서 정의하고 있으며, Meta-data 역할을 수행한다. Android system에 activity를 시작할 방법을 알려줄 수도 있고, activity를 시작한 후 어떻게 처리해야 하는 지도 알려줄 수 있다.&lt;/p&gt;
&lt;p&gt;지정은 &lt;code&gt;setFlags()&lt;/code&gt; 로 하면 된다.&lt;/p&gt;
&lt;h2 id=&quot;Intent의-type&quot;&gt;&lt;a href=&quot;#Intent의-type&quot; class=&quot;headerlink&quot; title=&quot;Intent의 type&quot;&gt;&lt;/a&gt;Intent의 type&lt;/h2&gt;&lt;p&gt;Intent type은 &lt;code&gt;Explicit&lt;/code&gt;, &lt;code&gt;Implicit&lt;/code&gt; 두 가지가 있다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Explicit intent&lt;/code&gt;는 &lt;code&gt;무엇을 할지&lt;/code&gt;, &lt;code&gt;Implicit intent&lt;/code&gt;는 &lt;code&gt;누구에게 던질지&lt;/code&gt;가 중요하다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;application의 보안을 위해 Service의 시작 시에는 항상 Explicit intent만 사용하고 Intent filter는 선언하지 않도록 하라.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Explicit-명시적-intent&quot;&gt;&lt;a href=&quot;#Explicit-명시적-intent&quot; class=&quot;headerlink&quot; title=&quot;Explicit(명시적) intent&quot;&gt;&lt;/a&gt;Explicit(명시적) intent&lt;/h3&gt;&lt;p&gt;새 activity를 시작하거나 service를 시작할 때 사용한다. (ex. File download)&lt;/p&gt;
&lt;p&gt;일반적으로 application 안에서 component를 시작할 때 사용한다.&lt;/p&gt;
&lt;p&gt;시작할 component의 이름을 &lt;code&gt;Fully-Qualified class name&lt;/code&gt; (ex. Abc.Class)으로 지정한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Explicit intent&lt;/code&gt;를 사용할 경우 system이 즉시 지정된 component를 시작한다.&lt;/p&gt;
&lt;p&gt;아래 예시는 웹에서 파일을 다운로드 하도록 한 DownloadService를 시작하는 코드이다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Executed in an Activity, so &#39;this&#39; is the Context&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// The fileUrl is a string URL, such as &quot;http://www.example.com/image.png&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Intent downloadIntent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, DownloadService.class);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;downloadIntent.setData(Uri.parse(fileUrl));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;startService(downloadIntent);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Implicit-암시적-intent&quot;&gt;&lt;a href=&quot;#Implicit-암시적-intent&quot; class=&quot;headerlink&quot; title=&quot;Implicit(암시적) intent&quot;&gt;&lt;/a&gt;Implicit(암시적) intent&lt;/h3&gt;&lt;p&gt;특정 component가 뭔지는 모르지만 현재 application이 수행할 수 없는 일반적인 작업을 다른 application의 component가 처리할 수 있도록 한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Implicit intent&lt;/code&gt;를 사용하면 system이 시작시킬 적절한 component를 찾게 된다. 이 때, &lt;code&gt;intent&lt;/code&gt;의 내용을 다른 application들의 &lt;code&gt;Manifest file&lt;/code&gt;에 선언된 &lt;code&gt;Intent filter&lt;/code&gt;와 대조하는 작업을 거치고, 해당 기능을 수행할 수 있는 application이 여러개가 있다면, 사용자가 선택할 수 있도록 화면을 띄워준다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Intent filter&lt;/code&gt;란 &lt;code&gt;Manifest file&lt;/code&gt;에 선언한 해당 component가 수신하고자 하는 &lt;code&gt;Intent type&lt;/code&gt;에 대한 내용이다. 다른 application들이 여기에 선언한 내용을 기반으로 내 application의 기능을 사용할 수 있게 된다. &lt;code&gt;Intent filter&lt;/code&gt;에 아무 것도 선언하지 않는다면 &lt;code&gt;explicit intent&lt;/code&gt;로만 수행할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;아래 예시는 URI를 사용하지 않고 “text/plain” 정보를 통해 extra 정보를 지정한 후 &lt;code&gt;ACTION_SEND&lt;/code&gt;를 통해 implicit intent를 날리는 것이다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Create the text message with a string&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Intent sendIntent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sendIntent.setAction(Intent.ACTION_SEND);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sendIntent.putExtra(Intent.EXTRA_TEXT, textMessage);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sendIntent.setType(&lt;span class=&quot;string&quot;&gt;&quot;text/plain&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Verify that the intent will resolve to an activity&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sendIntent.resolveActivity(getPackageManager()) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    startActivity(sendIntent);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Implicit intent 사용 시 주의할 점은 &lt;code&gt;startActivity()&lt;/code&gt;를 통해 날려도 처리할 application이 전혀 표시되지 않을 수 있다. 이 경우 호출 실패는 물론 application이 죽는다.&lt;/p&gt;
&lt;p&gt;어떤 Activity에서라도 해당 intent를 확실히 수신할 수 있도록 하려면 위의 코드처럼 &lt;code&gt;resolveActivity()&lt;/code&gt;를 호출하여 미리 확인하자. 결과가 null이 아닌 경우 해당 intent를 처리할 수 있는 application이 최소 하나는 있다는 것을 의미한다.&lt;/p&gt;
&lt;p&gt;Implicit intent에 응답하는 application이 하나 이상일 경우, 사용자가 수행될 application을 선택할 수 있는데 이 때 띄워주는 메뉴를 &lt;code&gt;app chooser(앱 선택기)&lt;/code&gt;라 한다.&lt;/p&gt;
&lt;p&gt;Android는 사용자에게 항상 같은 application을 사용할 수 있는 옵션을 제공한다.&lt;/p&gt;
&lt;p&gt;하지만 특정한 케이스에서, 사용자가 항상 다른 application을 사용해야 한다면 앱 선택기를 명시적으로 표시할 필요가 있다.&lt;/p&gt;
&lt;p&gt;앱 선택기를 항상 표시하기 위해 아래와 같이 chooser intent생성 후 &lt;code&gt;createChooser()&lt;/code&gt;를 사용하면 된다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Intent sendIntent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(Intent.ACTION_SEND);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Always use string resources for UI text.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// This says something like &quot;Share this photo with&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String title = getResources().getString(R.string.chooser_title);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Create intent to show the chooser dialog&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Intent chooser = Intent.createChooser(sendIntent, title);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Verify the original intent will resolve to at least one activity&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sendIntent.resolveActivity(getPackageManager()) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    startActivity(chooser);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Intent-filter&quot;&gt;&lt;a href=&quot;#Intent-filter&quot; class=&quot;headerlink&quot; title=&quot;Intent filter&quot;&gt;&lt;/a&gt;Intent filter&lt;/h2&gt;&lt;p&gt;내 application이 수신할 수 있는 &lt;code&gt;Implicit intent&lt;/code&gt;가 어떤 것이 있는지 알리려면 application Component에 대한 하나 이상의 &lt;code&gt;intent filter&lt;/code&gt;를 &lt;code&gt;Manifest file&lt;/code&gt;에 선언해야 한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Explicit intent&lt;/code&gt;는 Component가 어떤 &lt;code&gt;intent filter&lt;/code&gt;를 선언했든 무관하게 항상 정의해둔 곳으로 전달된다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;각 Intent filter는 다음과 같은 세 가지 요소 중 하나 이상을 사용하여 허용할 intent type을 정의할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;action&amp;gt;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;허용된 intent 작업을 name 속성에서 선언한다. Literal string이며 Class 상수가 아니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;data&amp;gt;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;허용된 data type을 선언한다. Data URI(scheme, host, port, path 등)와 MIME type 의 여러가지 내용 중 하나 이상의 속성을 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;category&amp;gt;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;허용된 intent category를 name 속성에서 선언한다. Literal string이며 Class 상수가 아니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Explicit intent를 수신하기 위해서는 Intent filter 내에 반드시 &lt;code&gt;CATEGORY_DEFAULT&lt;/code&gt;를 포 함시켜야 한다. &lt;code&gt;startActivity()&lt;/code&gt;, &lt;code&gt;startActivityForResult()&lt;/code&gt; 메소드들은 모든 intent를 &lt;code&gt;CATEGORY_DEFAULT&lt;/code&gt;를 선언한 것처럼 취급하기 때문에 이 Category를 intent filter에 선언하지 않으면 Activity의 어떤 암시적 intent도 확인되지 않는다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;아래 예시는 &lt;code&gt;Data type&lt;/code&gt;이 &lt;code&gt;text&lt;/code&gt;인 &lt;code&gt;ACTION_SEND&lt;/code&gt; intent를 수신하겠다는 뜻이다. Intent filter 내에 선언한 것들과 하나라도 맞지 않으면 intent가 application으로 전달되지 않는다.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;activity android:name=&quot;ShareActivity&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;action android:name=&quot;android.intent.action.SEND&quot;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;category android:name=&quot;android.intent.category.DEFAULT&quot;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;data android:mimeType=&quot;text/plain&quot;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/activity&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Intent filter에 등록하지 않았다고 하더라도 다른 application에서 내 application Component의 경로를 알아챌 경우 내 component를 수행할 수 있게 된다. 이 경우를 방어하기 위해 Manifest의 &lt;activity&gt; 안에 &lt;code&gt;android:exported = false&lt;/code&gt;를 설정하면 된다.&lt;/activity&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;아래는 &lt;a href=&quot;https://developer.android.com/reference/android/content/Intent.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android developer 사이트&lt;/a&gt;에서 제공하는 소셜 공유 application의 Manifest file이다.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;activity android:name=&quot;MainActivity&quot;&amp;gt; // MainActivity 가 application의 Entry point(진입 지점)이다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;!-- This activity is the main entry, should appear in app launcher --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;action android:name=&quot;android.intent.action.MAIN&quot; /&amp;gt; // 여기가 주요 진입 지점이며, 어떠한 intent도 바라지 않는 다는 것을 의미한다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&amp;gt; // 이 Activity의 icon이 system의 application 시작 관리자에 배치되어야 한다는 것을 나타낸다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        // 여기서는 icon을 지정하지 않았으므로 system은 &amp;lt;application&amp;gt; 에서 가져온 아이콘을 사용한다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/activity&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;activity android:name=&quot;ShareActivity&quot;&amp;gt; // 컨텐츠 공유를 목적으로 만든 Activity이다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;!-- This activity handles &quot;SEND&quot; actions with text data --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;action android:name=&quot;android.intent.action.SEND&quot;/&amp;gt; // 다른 application에서 이 action과&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;category android:name=&quot;android.intent.category.DEFAULT&quot;/&amp;gt; // type이 text/plain인 category를 이 application으로 던졌을 때 이 activity를 수행한다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;data android:mimeType=&quot;text/plain&quot;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;!-- This activity also handles &quot;SEND&quot; and &quot;SEND_MULTIPLE&quot; with media data --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;action android:name=&quot;android.intent.action.SEND&quot;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;action android:name=&quot;android.intent.action.SEND_MULTIPLE&quot;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;category android:name=&quot;android.intent.category.DEFAULT&quot;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;data android:mimeType=&quot;application/vnd.google.panorama360+jpg&quot;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;data android:mimeType=&quot;image/*&quot;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;data android:mimeType=&quot;video/*&quot;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/activity&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Pending-Intent&quot;&gt;&lt;a href=&quot;#Pending-Intent&quot; class=&quot;headerlink&quot; title=&quot;Pending Intent&quot;&gt;&lt;/a&gt;Pending Intent&lt;/h2&gt;&lt;p&gt;&lt;code&gt;PendingIntent&lt;/code&gt;는 &lt;code&gt;Intent&lt;/code&gt;의 &lt;code&gt;wrapper&lt;/code&gt;이다.&lt;/p&gt;
&lt;p&gt;다른 application에 권한을 위임하여 그 안에 들어있는 intent를 마치 본인 application의 자체 프로세스에서 실행하는 것처럼 사용하는 것이다.&lt;/p&gt;
&lt;p&gt;뭔 말인가 싶다. &lt;/p&gt;
&lt;p&gt;현재의 application A가 PendingIntent를 만들어서 다른 application이나 컴포넌트에 “내가 너에게 이 intent를 전달할 수 있는 권한을 줄테니 이따가 나 대신 좀 보내줘.” 라고 하는 것이다.&lt;/p&gt;
&lt;p&gt;주요 사용 사례는 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;사용자가 이 application의 &lt;code&gt;notification&lt;/code&gt;을 통해 task를 수행할 때 intent가 실행되도록 한다(Android system의 NotificationManager가 Intent를 실행한다.).&lt;/li&gt;
&lt;li&gt;사용자가 이 application의 &lt;code&gt;Application Widget&lt;/code&gt;으로 task를 수행할 때 intent가 실행되도록 한다(Mainscreen application에 Intent를 실행한다.).&lt;/li&gt;
&lt;li&gt;지정된 시간에 intent가 실행되도록 선언한다(Android system의 AlarmManager가 Intent를 실행한다.).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;예를 들어, 아래 코드는 실행하면 Notification bar에 새 notification이 등록되고 사용자가 이 notification을 터치했을 때 MainActivity로 진입한다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;NotificationManager nm = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PendingIntent pIntent = PendingIntent.getActivity(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, MainActivity.class), PendingIntent.FLAG_UPDATE_CURRENT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Notification.Builder mBuilder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Notification.Builder(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mBuilder.setSmallIcon(R.mipmap.ic_launcher);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mBuilder.setTicker(&lt;span class=&quot;string&quot;&gt;&quot;Notification.Builder&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mBuilder.setWhen(System.currentTimeMillis());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mBuilder.setNumber(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mBuilder.setContentTitle(&lt;span class=&quot;string&quot;&gt;&quot;Notification.Builder Title&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mBuilder.setContentText(&lt;span class=&quot;string&quot;&gt;&quot;Notification.Builder Massage&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mBuilder.setDefaults(Notification.DEFAULT_SOUND | Notification.DEFAULT_VIBRATE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mBuilder.setContentIntent(pIntent);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mBuilder.setAutoCancel(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mBuilder.setPriority(Notification.PRIORITY_MAX);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;nm.notify(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, mBuilder.build());&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;각 Intent object는 특정한 유형의 component(Activity, Service, BroadcastReceiver)가 처리하도록 설계되어 있다. 따라서 PendingIntent도 이러한 사항을 염두에 두고 생성해야 한다.&lt;/p&gt;
&lt;p&gt;PendingIntent를 사용하는 경우 직접적으로 startActivity() 등의 호출을 사용하지 않으므로 적절하게 세팅해줘야 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Activity 시작 Intent: &lt;code&gt;PendingIntent.getActivitiy()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Service 시작 Intent: &lt;code&gt;PendingIntent.getService()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;BroadcastReceiver 시작 Intent: &lt;code&gt;PendingIntent.getBroadcast()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Intent-살펴보기&quot;&gt;&lt;a href=&quot;#Intent-살펴보기&quot; class=&quot;headerlink&quot; title=&quot;Intent 살펴보기&quot;&gt;&lt;/a&gt;Intent 살펴보기&lt;/h2&gt;&lt;p&gt;system이 Activity를 시작하라는 implicit intent를 수신하면 system은 해당 intent에 대한 최선의 activity를 검색한다. 이 때 판단 근거가 아래 세 가지이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intent Action&lt;/li&gt;
&lt;li&gt;Intent Data (URI와 data type)&lt;/li&gt;
&lt;li&gt;Intent Category&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Action-test&quot;&gt;&lt;a href=&quot;#Action-test&quot; class=&quot;headerlink&quot; title=&quot;Action test&quot;&gt;&lt;/a&gt;Action test&lt;/h3&gt;&lt;p&gt;이 Filter를 통과하려면 아래 나열된 작업 중 하나와 일치해야 한다.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;action android:name=&quot;android.intent.action.EDIT&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;action android:name=&quot;android.intent.action.VIEW&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/intent-filter&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Category-test&quot;&gt;&lt;a href=&quot;#Category-test&quot; class=&quot;headerlink&quot; title=&quot;Category test&quot;&gt;&lt;/a&gt;Category test&lt;/h3&gt;&lt;p&gt;Intent 내의 모든 Category가 filter 내의 category와 일치해야 한다. Filter 내의 category 수가 더 많은 것은 상관 없다.&lt;/p&gt;
&lt;p&gt;Intent의 category가 아무 것도 선언되어 있지 않으면 모두 통과할 수 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;category android:name=&quot;android.intent.category.BROWSABLE&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/intent-filter&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Android는 &lt;code&gt;CATEGORY_DEFAULT&lt;/code&gt; category를 &lt;code&gt;startActivity()&lt;/code&gt; 및 &lt;code&gt;startActivityForResult()&lt;/code&gt;에 전달된 모든 implicit intent에 적용한다. 따라서 Activity가 implicit intent를 수신하기 위해서는 intent filter 내에 “android.intent.category.DEFAULT” category 선언이 반드시 포함되어 있어야 한다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Data-test&quot;&gt;&lt;a href=&quot;#Data-test&quot; class=&quot;headerlink&quot; title=&quot;Data test&quot;&gt;&lt;/a&gt;Data test&lt;/h3&gt;&lt;p&gt;URI 구조 및 Data type(MIME type)에 대해 나타내는데, URI의 각 부분에 대해서는 별도의 속성 (scheme, host, port, path)이 사용될 수 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;data android:mimeType=&quot;video/mpeg&quot; android:scheme=&quot;http&quot; ... /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;data android:mimeType=&quot;audio/mpeg&quot; android:scheme=&quot;http&quot; ... /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/intent-filter&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;content://com.example.project:200/folder/subfolder/etc&lt;ul&gt;
&lt;li&gt;scheme: content&lt;/li&gt;
&lt;li&gt;host: com.example.project&lt;/li&gt;
&lt;li&gt;port: 200&lt;/li&gt;
&lt;li&gt;path: folder/subfolder/etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;위의 네 가지 속성에는 linear한 종속 관계가 존재한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scheme이 지정되지 않으면 host를 무시한다.&lt;/li&gt;
&lt;li&gt;host가 지정되지 않으면 port를 무시한다.&lt;/li&gt;
&lt;li&gt;scheme과 host 둘 다 지정되지 않으면 path를 무시한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Intent의 URI이 Filter의 URI와 비교될 때에는 filter 내에 포함된 URI와 부분적으로 비교된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;filter가 scheme만 지정한 경우, 해당 scheme을 가지는 모든 URI는 filter와 매칭된다.&lt;/li&gt;
&lt;li&gt;filter가 scheme과 authority를 지정하고 path를 지정하지 않는 경우, 같은 scheme과 authority를 갖는 모든 URI는 path와 관계 없이 filter를 통과한다.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;filter가 scheme, authority, path를 모두 지정할 경우, 같은 scheme, authority, path를 가진 URI만이 filter를 통과할 수 있다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;path에는 * 을 사용할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Data의 유효성을 판별하기 위해서는 intent의 URI, MIME type과 filter의 URI, MIME type을 모두 비교해야 한다.&lt;/p&gt;
&lt;p&gt;  a. URI와 MIME type을 모두 갖지 않는 intent는 URI와 MIME type을 아무 것도 정의하지 않은 filter만을 통과할 수 있다.&lt;br&gt;  b. URI를 갖고 MIME type을 갖지 않는 intent는 filter의 URI와 일치하고 filter가 MIME type을 지정하지 않은 경우 통과할 수 있다.&lt;br&gt;  c. URI가 없고 MIME type만 갖는 intent는 filter가 URI를 지정하지 않고 MIME type을 가지고 있을 때 통과할 수 있다.&lt;br&gt;  d. URI와 MIME type을 모두 갖는 intent는 filter에 나열된 type과 매치되는 경우에만 통과한다. Intent의 URI가 filter의 URI와 일치하거나 &lt;code&gt;content:&lt;/code&gt; 또는 &lt;code&gt;file:&lt;/code&gt;을 가지고 있는 경우, 그리고 filter가 URI를 정의하지 않는 경우 통과할 수 있다. 다른 말로, filter가 MIME type만 가지고 있을 경우 component는 &lt;code&gt;content:&lt;/code&gt;와 &lt;code&gt;file:&lt;/code&gt;을 당연히 지원하는 것으로 여겨진다.&lt;/p&gt;
&lt;p&gt;규칙 d는 component가 file 또는 content provider로부터 local file을 가지고 올 수 있다는 기대를 가지고 반영된다. 따라서, 이러한 filter는 data type만 나열해도 되고 &lt;code&gt;content:&lt;/code&gt;와 &lt;code&gt;file:&lt;/code&gt; scheme을 명시적으로 작성하지 않아도 된다.&lt;/p&gt;
&lt;p&gt;아래 예시는 Content provider로부터 image data를 가지고 와서 표시할 수 있다는 의미를 갖는다.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;data android:mimeType=&quot;image/*&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/intent-filter&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;아래 예시는 Network에서 Video data를 검색할 수 있다는 의미를 갖는다.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;intent-filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;data android:scheme=&quot;http&quot; android:type=&quot;video/*&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/intent-filter&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Intent-matching&quot;&gt;&lt;a href=&quot;#Intent-matching&quot; class=&quot;headerlink&quot; title=&quot;Intent matching&quot;&gt;&lt;/a&gt;Intent matching&lt;/h2&gt;&lt;p&gt;  Intent를 Intent filter와 비교를 해보면 target component를 활성화 시킬 수 있을 뿐만 아니라 단말의 component set에 대한 정보를 발견할 수 있다. 예를 들어, Home application이 application 런쳐를 채우기 위해 ACTION_MAIN action과 CATEGORY_LAUNCH category를 갖는 intent filter들을 찾아볼 수 있다.&lt;/p&gt;
&lt;p&gt;  개발한 application에서 비슷한 방법을 사용할 수 있는데, Packagemanager는 &lt;code&gt;query...()&lt;/code&gt; 메소드들을 가지고 있고 이는 특정 intent로 접근할 수 있는 모든 component를 return한다. 이와 비슷한 것들로 &lt;code&gt;resolve...()&lt;/code&gt; 메소드들이 있다. 이는 intent를 응답하기 위한 최적의 component를 정의한다.&lt;/p&gt;
&lt;p&gt;  예를 들어, &lt;code&gt;queryIntentActivities()&lt;/code&gt;는 intent가 argument로써 통과할 수 있는 모든 activity의 list를 return하고, &lt;code&gt;queryIntentServices()&lt;/code&gt;는 service에 대한 list를 return한다. 두 가지 메소드 모두 component를 활성화 시키지는 않고 단지 list만 나열할 뿐이다. BroadcastReceiver에서 사용하는 것은 &lt;code&gt;queryBroadcastReceivers()&lt;/code&gt;가 있다.&lt;/p&gt;
&lt;h2 id=&quot;출처&quot;&gt;&lt;a href=&quot;#출처&quot; class=&quot;headerlink&quot; title=&quot;출처&quot;&gt;&lt;/a&gt;출처&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/guide/components/fundamentals.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.android.com/guide/components/fundamentals.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/reference/android/content/Intent.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.android.com/reference/android/content/Intent.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/guide/components/intents-filters.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.android.com/guide/components/intents-filters.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/guide/components/tasks-and-back-stack.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.android.com/guide/components/tasks-and-back-stack.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/reference/android/app/PendingIntent.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.android.com/reference/android/app/PendingIntent.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/07/17/2016-07-17-android-intent/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Singleton</title>
      <link>http://lazyrodi.github.io/2016/07/16/2016-07-16-pattern-singleton/</link>
      <guid>http://lazyrodi.github.io/2016/07/16/2016-07-16-pattern-singleton/</guid>
      <pubDate>Sat, 16 Jul 2016 09:42:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;Singleton은 유일한 Instance를 만들어 사용하는 방법이다.&lt;/p&gt;
&lt;p&gt;생성자를 private으로 하여 다른 곳에서 Instance를 직접 생성할 수 없으며, public &lt;code&gt;getInstance()&lt;/code&gt;를 통해서만 i
      
      </description>
      
      <content:encoded>&lt;p&gt;Singleton은 유일한 Instance를 만들어 사용하는 방법이다.&lt;/p&gt;
&lt;p&gt;생성자를 private으로 하여 다른 곳에서 Instance를 직접 생성할 수 없으며, public &lt;code&gt;getInstance()&lt;/code&gt;를 통해서만 instance를 가져가서 사용할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;객체 = Object = Compile된 각각의 .class file&lt;/li&gt;
&lt;li&gt;개체 = Instance = Compile된 .class file을 new 연산자를 사용하여 Memory에 Loading한 상태&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;기본적으로는 이런 느낌이다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Iamsingle&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Iamsingle mInstance;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Iamsingle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Iamsingle &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInstance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      mInstance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Iamsingle(); &lt;span class=&quot;comment&quot;&gt;// 누군가가 만들어둔 Instance가 없다면 만들어서 돌려줍시다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mInstance;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;필요성&quot;&gt;&lt;a href=&quot;#필요성&quot; class=&quot;headerlink&quot; title=&quot;필요성&quot;&gt;&lt;/a&gt;필요성&lt;/h2&gt;&lt;p&gt;설정 파일 등 여러 개가 있으면 혼란스러울 수 있는 경우 Singleton을 통해 하나의 자원만 사용할 수 있게 한다.&lt;/p&gt;
&lt;p&gt;전역적으로 접근이 가능해야 하지만 단 하나만 있어야 한다.&lt;/p&gt;
&lt;p&gt;전역 변수는 여러 개가 생성될 수 있기 때문에 Singleton을 사용하는 것이다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;싱글턴 패턴은 해당 클래스의 인스턴스가 하나만 만들어지고, 어디서든지 그 인스턴스에 접근할 수 있도록 하기 위한 패턴입니다. - Head First Design Patterns&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;또한, Global Class는 어플리케이션이 시작될 때 항상 로딩되지만 Singleton Class는 시작되는 지점을 개발자가 지정할 수 있다.&lt;/p&gt;
&lt;h2 id=&quot;Trouble-shooting&quot;&gt;&lt;a href=&quot;#Trouble-shooting&quot; class=&quot;headerlink&quot; title=&quot;Trouble shooting&quot;&gt;&lt;/a&gt;Trouble shooting&lt;/h2&gt;&lt;h3 id=&quot;MultiThreading-문제-해결&quot;&gt;&lt;a href=&quot;#MultiThreading-문제-해결&quot; class=&quot;headerlink&quot; title=&quot;MultiThreading 문제 해결&quot;&gt;&lt;/a&gt;MultiThreading 문제 해결&lt;/h3&gt;&lt;p&gt;위쪽에서 표현한 코드는 &lt;code&gt;MultiThread 환경&lt;/code&gt;에서 &lt;code&gt;추가적인 Instance의 생성&lt;/code&gt;을 완전히 방어할 수 없다.&lt;/p&gt;
&lt;p&gt;고로, Thread 사용 시 기본적인 방어 방법인 &lt;code&gt;Syncronized&lt;/code&gt;를 붙여보기로 한다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Iamsingle&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Iamsingle mInstance;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Iamsingle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; Iamsingle &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInstance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      mInstance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Iamsingle(); &lt;span class=&quot;comment&quot;&gt;// 누군가가 만들어둔 Instance가 없다면 만들어서 돌려줍시다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mInstance;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Synchronized로-인한-성능-문제-해결&quot;&gt;&lt;a href=&quot;#Synchronized로-인한-성능-문제-해결&quot; class=&quot;headerlink&quot; title=&quot;Synchronized로 인한 성능 문제 해결&quot;&gt;&lt;/a&gt;Synchronized로 인한 성능 문제 해결&lt;/h3&gt;&lt;p&gt;Synchronized로 인한 MultiThreading 시의 성능은 엄청나게 떨어진다.&lt;/p&gt;
&lt;p&gt;고로, &lt;code&gt;Instance를 미리 생성&lt;/code&gt;해 보도록 한다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Iamsingle&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Iamsingle mInstance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Iamsingle();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Iamsingle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; Iamsingle &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mInstance;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;문제를-해결하는-또-다른-방법&quot;&gt;&lt;a href=&quot;#문제를-해결하는-또-다른-방법&quot; class=&quot;headerlink&quot; title=&quot;문제를 해결하는 또 다른 방법&quot;&gt;&lt;/a&gt;문제를 해결하는 또 다른 방법&lt;/h3&gt;&lt;p&gt;DCL (Double-Checking Locking) 이라는 방법으로 Instance가 생성되었으면 그냥 넘기고, 없는 경우에만 synchronized 를 걸어주어 Instance를 요청하는 Thread들에 부담을 덜어주는 방법이다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;volatile&lt;/code&gt; keyword는 Java 코드의 &lt;code&gt;변수(Variable)를 메모리에 저장(Store)&lt;/code&gt; 하라는 의미이다. &lt;code&gt;volatile 변수&lt;/code&gt;는 CPU cache를 사용하지 않고 Main memory에 직접 read/write 한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;volatile&lt;/code&gt;에 대한 자세한 내용은 &lt;a href=&quot;http://noesse.tistory.com/28&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;여기&lt;/a&gt;를 참조해 보자.&lt;/p&gt;
&lt;p&gt;결론적으로 여기서는 CPU Cache를 통할 때 변수의 무결성을 보장할 수 없으므로 &lt;code&gt;volatile&lt;/code&gt;을 통해 Main memory에 직접 접근하겠다는 뜻이다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Iamsingle&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Iamsingle mInstance;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Iamsingle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Iamsingle &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInstance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 여기까지는 MultiThread 방어가 되지 않은 상태.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInstance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;// 위의 첫 번째 null check를 통과한 thread가 대기하고 있다가 들어왔을 확률이 있기 때문에 한 번 더 check.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          mInstance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Iamsingle();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mInstance;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;마무리&quot;&gt;&lt;a href=&quot;#마무리&quot; class=&quot;headerlink&quot; title=&quot;마무리&quot;&gt;&lt;/a&gt;마무리&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;무분별하게 리팩토링 하겠다고 Singleton 남발하지 말 것.&lt;/li&gt;
&lt;li&gt;전역 설정이 필요할 때 등 꼭 필요할 때만 사용할 것.&lt;/li&gt;
&lt;li&gt;위에서 나열한 방법들 중 해당 어플리케이션에 적절한 것을 사용할 것. 단일 Thread를 사용하는 프로그램에서 굳이 synchronized로 성능 저하를 시킬 필요는 없다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;출처&quot;&gt;&lt;a href=&quot;#출처&quot; class=&quot;headerlink&quot; title=&quot;출처&quot;&gt;&lt;/a&gt;출처&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://noesse.tistory.com/28&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://noesse.tistory.com/28&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Head First Design Patterns - 한빛미디어, O’Reilly.&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/07/16/2016-07-16-pattern-singleton/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
